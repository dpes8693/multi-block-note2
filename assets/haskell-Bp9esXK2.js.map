{"version":3,"file":"haskell-Bp9esXK2.js","sources":["../../node_modules/.pnpm/@shikijs+langs-precompiled@3.8.1/node_modules/@shikijs/langs-precompiled/dist/haskell.mjs"],"sourcesContent":["import { EmulatedRegExp } from 'oniguruma-to-es'\n\nconst lang = Object.freeze({displayName:\"Haskell\",fileTypes:[\"hs\",\"hs-boot\",\"hsig\"],name:\"haskell\",patterns:[{include:\"#liquid_haskell\"},{include:\"#comment_like\"},{include:\"#numeric_literals\"},{include:\"#string_literal\"},{include:\"#char_literal\"},{match:/(?<![\\#\\@])-\\}/dgv,name:\"invalid\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"}},match:/(\\()\\p{space}*(\\))/dgv,name:\"constant.language.unit.haskell\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"},\"3\":{name:\"keyword.operator.hash.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},match:/(\\()(#)\\p{space}*(#)(\\))/dgv,name:\"constant.language.unit.unboxed.haskell\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"}},match:/(\\()\\p{space}*,[\\,\\p{space}]*(\\))/dgv,name:\"support.constant.tuple.haskell\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"},\"3\":{name:\"keyword.operator.hash.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},match:/(\\()(#)\\p{space}*,[\\,\\p{space}]*(#)(\\))/dgv,name:\"support.constant.tuple.unboxed.haskell\"},{captures:{\"1\":{name:\"punctuation.bracket.haskell\"},\"2\":{name:\"punctuation.bracket.haskell\"}},match:/(\\[)\\p{space}*(\\])/dgv,name:\"constant.language.empty-list.haskell\"},{begin:/(\\b(?<!')(module)|^(signature))\\b((?!'))/dgv,beginCaptures:{\"2\":{name:\"keyword.other.module.haskell\"},\"3\":{name:\"keyword.other.signature.haskell\"}},end:/(?=\\b(?<!')where\\b(?!'))/dgv,name:\"meta.declaration.module.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#module_name\"},{include:\"#module_exports\"},{match:/[a-z]+/dgv,name:\"invalid\"}]},{include:\"#ffi\"},{begin:/^(\\p{space}*)(class)\\b((?!'))/dgv,beginCaptures:{\"2\":{name:\"keyword.other.class.haskell\"}},end:/(?=(?<!')\\bwhere\\b(?!'))|(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.class.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#where\"},{include:\"#type_signature\"}]},{begin:/^(\\p{space}*)(data|newtype)(?:\\p{space}+(instance))?\\p{space}+((?:(?!(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:=|--+)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])|\\b(?<!')(?:where|deriving)\\b(?!')|\\{-)[^\\n])*)(?=\\b(?<!'')where\\b(?!''))/dgv,beginCaptures:{\"2\":{name:\"keyword.other.$2.haskell\"},\"3\":{name:\"keyword.other.instance.haskell\"},\"4\":{patterns:[{include:\"#type_signature\"}]}},end:/(?=(?<!')\\bderiving\\b(?!'))|(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.$2.generalized.haskell\",patterns:[{include:\"#comment_like\"},{begin:/(?<!')\\b(where)\\p{space}*(\\{)(?!-)/dgv,beginCaptures:{\"1\":{name:\"keyword.other.where.haskell\"},\"2\":{name:\"punctuation.brace.haskell\"}},end:/(\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},patterns:[{include:\"#comment_like\"},{include:\"#gadt_constructor\"},{match:/;/dgv,name:\"punctuation.semicolon.haskell\"}]},{match:/\\b(?<!')(where)\\b(?!')/dgv,name:\"keyword.other.where.haskell\"},{include:\"#deriving\"},{include:\"#gadt_constructor\"}]},{include:\"#role_annotation\"},{begin:/^(\\p{space}*)(pattern)\\p{space}+([^\\n]*?)\\p{space}+(::|∷)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])/dgv,beginCaptures:{\"2\":{name:\"keyword.other.pattern.haskell\"},\"3\":{patterns:[{include:\"#comma\"},{include:\"#data_constructor\"}]},\"4\":{name:\"keyword.operator.double-colon.haskell\"}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.pattern.type.haskell\",patterns:[{include:\"#type_signature\"}]},{begin:/^\\p{space}*(pattern)\\b(?!')/dgv,captures:{\"1\":{name:\"keyword.other.pattern.haskell\"}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.pattern.haskell\",patterns:[{include:\"$self\"}]},{begin:/^(\\p{space}*)(data|newtype)(?:\\p{space}+(family|instance))?\\p{space}+(((?!(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:=|--+)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])|\\b(?<!')(?:where|deriving)\\b(?!')|\\{-)[^\\n])*)/dgv,beginCaptures:{\"2\":{name:\"keyword.other.$2.haskell\"},\"3\":{name:\"keyword.other.$3.haskell\"},\"4\":{patterns:[{include:\"#type_signature\"}]}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.$2.algebraic.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#deriving\"},{include:\"#forall\"},{include:\"#adt_constructor\"},{include:\"#context\"},{include:\"#record_decl\"},{include:\"#type_signature\"}]},{begin:/^(\\p{space}*)(type)\\p{space}+(family)\\b(?!')(((?!(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:=|--+)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])|\\b(?<!')where\\b(?!')|\\{-)[^\\n])*)/dgv,beginCaptures:{\"2\":{name:\"keyword.other.type.haskell\"},\"3\":{name:\"keyword.other.family.haskell\"},\"4\":{patterns:[{include:\"#comment_like\"},{include:\"#where\"},{include:\"#type_signature\"}]}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.type.family.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#where\"},{include:\"#type_signature\"}]},{begin:/^(\\p{space}*)(type)(?:\\p{space}+(instance))?\\p{space}+(((?!(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:=|--+|::|∷)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])|\\{-)[^\\n])*)/dgv,beginCaptures:{\"2\":{name:\"keyword.other.type.haskell\"},\"3\":{name:\"keyword.other.instance.haskell\"},\"4\":{patterns:[{include:\"#type_signature\"}]}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.declaration.type.haskell\",patterns:[{include:\"#type_signature\"}]},{begin:/^(\\p{space}*)(instance)\\b((?!'))/dgv,beginCaptures:{\"2\":{name:\"keyword.other.instance.haskell\"}},end:/(?=\\b(?<!')(where)\\b(?!'))|(?=[\\;\\}])|^(?!(?!)\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))/dgv,name:\"meta.declaration.instance.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#where\"},{include:\"#type_signature\"}]},{begin:/^(\\p{space}*)(import)\\b((?!'))/dgv,beginCaptures:{\"2\":{name:\"keyword.other.import.haskell\"}},end:/(?=\\b(?<!')(where)\\b(?!'))|(?=[\\;\\}])|^(?!(?!)\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))/dgv,name:\"meta.import.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#where\"},{captures:{\"1\":{name:\"keyword.other.$1.haskell\"}},match:/(qualified|as|hiding)/dgv},{include:\"#module_name\"},{include:\"#module_exports\"}]},{include:\"#deriving\"},{include:\"#layout_herald\"},{include:\"#keyword\"},{captures:{\"1\":{name:\"keyword.other.$1.haskell\"},\"2\":{patterns:[{include:\"#comment_like\"},{include:\"#integer_literals\"},{include:\"#infix_op\"}]}},match:/^\\p{space}*(infix[lr]?)\\p{space}+([^\\n]*)/dgv,name:\"meta.fixity-declaration.haskell\"},{include:\"#overloaded_label\"},{include:\"#type_application\"},{include:\"#reserved_symbol\"},{include:\"#fun_decl\"},{include:\"#qualifier\"},{include:\"#data_constructor\"},{include:\"#start_type_signature\"},{include:\"#prefix_op\"},{include:\"#infix_op\"},{begin:/(\\()(#)\\p{space}/dgv,beginCaptures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"}},end:/(#)(\\))/dgv,endCaptures:{\"1\":{name:\"keyword.operator.hash.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comma\"},{include:\"$self\"}]},{begin:/(\\()/dgv,beginCaptures:{\"1\":{name:\"punctuation.paren.haskell\"}},end:/(\\))/dgv,endCaptures:{\"1\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comma\"},{include:\"$self\"}]},{include:\"#quasi_quote\"},{begin:/(\\[)/dgv,beginCaptures:{\"1\":{name:\"punctuation.bracket.haskell\"}},end:/(\\])/dgv,endCaptures:{\"1\":{name:\"punctuation.bracket.haskell\"}},patterns:[{include:\"#comma\"},{include:\"$self\"}]},{include:\"#record\"}],repository:{adt_constructor:{patterns:[{include:\"#comment_like\"},{begin:/(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:(=)|(\\|))(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.eq.haskell\"},\"2\":{name:\"keyword.operator.pipe.haskell\"}},end:/*@__PURE__*/ new EmulatedRegExp(\"(?:^|^)\\\\p{space}*(?:(?<!')\\\\b(['\\\\._\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]+)|('?(?<paren>\\\\((?:[^\\\\(\\\\)]?|(?:\\\\((?:[^\\\\(\\\\)]?|(?:\\\\((?:[^\\\\(\\\\)]?|(?:\\\\((?:[^\\\\(\\\\)]?|(?:\\\\((?:[^\\\\(\\\\)]?|(?:))*\\\\)))*\\\\)))*\\\\)))*\\\\)))*\\\\)))|('?(?<brac>\\\\((?:[^\\\\]\\\\[]?|(?:\\\\((?:[^\\\\]\\\\[]?|(?:\\\\((?:[^\\\\]\\\\[]?|(?:\\\\((?:[^\\\\]\\\\[]?|(?:\\\\((?:[^\\\\]\\\\[]?|(?:))*\\\\]))*\\\\]))*\\\\]))*\\\\]))*\\\\])))\\\\p{space}*(?:(?<![[\\\\p{S}\\\\p{P}]&&[^\\\\]\\\"'\\\\(\\\\)\\\\,\\\\;\\\\[_\\\\`\\\\{\\\\}]])(:[[\\\\p{S}\\\\p{P}]&&[^\\\\]\\\"'\\\\(\\\\)\\\\,\\\\;\\\\[_\\\\`\\\\{\\\\}]]*)|(`)([\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*)(`))|(?<!')\\\\b([\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*)|(\\\\()\\\\p{space}*(:[[\\\\p{S}\\\\p{P}]&&[^\\\\]\\\"'\\\\(\\\\)\\\\,\\\\;\\\\[_\\\\`\\\\{\\\\}]]*)\\\\p{space}*(\\\\))\",\"dgv\",{\"strategy\":\"clip_search\"}),endCaptures:{\"1\":{patterns:[{include:\"#type_signature\"}]},\"2\":{patterns:[{include:\"#type_signature\"}]},\"4\":{patterns:[{include:\"#type_signature\"}]},\"6\":{name:\"constant.other.operator.haskell\"},\"7\":{name:\"punctuation.backtick.haskell\"},\"8\":{name:\"constant.other.haskell\"},\"9\":{name:\"punctuation.backtick.haskell\"},\"10\":{name:\"constant.other.haskell\"},\"11\":{name:\"punctuation.paren.haskell\"},\"12\":{name:\"constant.other.operator.haskell\"},\"13\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comment_like\"},{include:\"#deriving\"},{include:\"#record_decl\"},{include:\"#forall\"},{include:\"#context\"}]}]},block_comment:{applyEndPatternLast:1,begin:/\\{-/dgv,captures:{\"0\":{name:\"punctuation.definition.comment.haskell\"}},end:/-\\}/dgv,name:\"comment.block.haskell\",patterns:[{include:\"#block_comment\"}]},char_literal:{captures:{\"1\":{name:\"punctuation.definition.string.begin.haskell\"},\"2\":{name:\"constant.character.escape.haskell\"},\"3\":{name:\"constant.character.escape.octal.haskell\"},\"4\":{name:\"constant.character.escape.hexadecimal.haskell\"},\"5\":{name:\"constant.character.escape.control.haskell\"},\"6\":{name:\"punctuation.definition.string.end.haskell\"}},match:/(?<!['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}])(')(?:[ -\\[\\]-\\~]|(\\\\(?:NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[\"\\&'\\\\abfnrtv]))|(\\\\o[0-7]+)|(\\\\x\\p{AHex}+)|(\\\\\\^[\\@-_]))(')/dgv,name:\"string.quoted.single.haskell\"},comma:{match:/,/dgv,name:\"punctuation.separator.comma.haskell\"},comment_like:{patterns:[{include:\"#cpp\"},{include:\"#pragma\"},{include:\"#comments\"}]},comments:{patterns:[{begin:/^(\\p{space}*)(--\\p{space}[\\$\\|])/dgv,beginCaptures:{\"2\":{name:\"punctuation.whitespace.comment.leading.haskell\"}},end:/(?=^(?!\\1--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])))()/dgv,name:\"comment.block.documentation.haskell\"},{begin:/(^[\\t ]+)?(--\\p{space}[\\*\\^])/dgv,beginCaptures:{\"1\":{name:\"punctuation.whitespace.comment.leading.haskell\"}},end:/\\n/dgv,name:\"comment.line.documentation.haskell\"},{applyEndPatternLast:1,begin:/\\{-\\p{space}?[\\$\\*\\^\\|]/dgv,captures:{\"0\":{name:\"punctuation.definition.comment.haskell\"}},end:/-\\}/dgv,name:\"comment.block.documentation.haskell\",patterns:[{include:\"#block_comment\"}]},{begin:/(^[\\t ]+)?(?=--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]))/dgv,beginCaptures:{\"1\":{name:\"punctuation.whitespace.comment.leading.haskell\"}},end:/*@__PURE__*/ new EmulatedRegExp(\"(?!^)\",\"dgv\",{\"strategy\":\"clip_search\"}),patterns:[{begin:/--/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.comment.haskell\"}},end:/\\n/dgv,name:\"comment.line.double-dash.haskell\"}]},{include:\"#block_comment\"}]},context:{captures:{\"1\":{patterns:[{include:\"#comment_like\"},{include:\"#type_signature\"}]},\"2\":{name:\"keyword.operator.big-arrow.haskell\"}},match:/([^\\n]*)(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(=>|⇒)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])/dgv},cpp:{captures:{\"1\":{name:\"punctuation.definition.preprocessor.c\"}},match:/^(#)[^\\n]*(?=\\n?$)/dgv,name:\"meta.preprocessor.c\"},data_constructor:{match:/\\b(?<!')[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*(?!['\\.\\p{L}\\p{M}\\p{N}\\p{Pc}])/dgv,name:\"constant.other.haskell\"},deriving:{patterns:[{begin:/^(\\p{space}*)(deriving)\\p{space}+(?:(via|stock|newtype|anyclass)\\p{space}+)?/dgv,beginCaptures:{\"2\":{name:\"keyword.other.deriving.haskell\"},\"3\":{name:\"keyword.other.deriving.strategy.$3.haskell\"}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.deriving.haskell\",patterns:[{include:\"#comment_like\"},{match:/(?<!')\\b(instance)\\b(?!')/dgv,name:\"keyword.other.instance.haskell\"},{captures:{\"1\":{name:\"keyword.other.deriving.strategy.$1.haskell\"}},match:/(?<!')\\b(via|stock|newtype|anyclass)\\b(?!')/dgv},{include:\"#type_signature\"}]},{begin:/(deriving)(?:\\p{space}+(stock|newtype|anyclass))?\\p{space}*(\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.other.deriving.haskell\"},\"2\":{name:\"keyword.other.deriving.strategy.$2.haskell\"},\"3\":{name:\"punctuation.paren.haskell\"}},end:/(\\))/dgv,endCaptures:{\"1\":{name:\"punctuation.paren.haskell\"}},name:\"meta.deriving.haskell\",patterns:[{include:\"#type_signature\"}]},{captures:{\"1\":{name:\"keyword.other.deriving.haskell\"},\"2\":{name:\"keyword.other.deriving.strategy.$2.haskell\"},\"3\":{patterns:[{include:\"#type_signature\"}]},\"5\":{name:\"keyword.other.deriving.strategy.via.haskell\"},\"6\":{patterns:[{include:\"#type_signature\"}]}},match:/(deriving)(?:\\p{space}+(stock|newtype|anyclass))?\\p{space}+([\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)(\\p{space}+(via)\\p{space}+([^\\n]*)(?=\\n?$))?/dgv,name:\"meta.deriving.haskell\"},{match:/(?<!')\\b(via)\\b(?!')/dgv,name:\"keyword.other.deriving.strategy.via.haskell\"}]},double_colon:{captures:{\"1\":{name:\"keyword.operator.double-colon.haskell\"}},match:/\\p{space}*(::|∷)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])\\p{space}*/dgv},export_constructs:{patterns:[{include:\"#comment_like\"},{begin:/\\b(?<!')(pattern)\\b(?!')/dgv,beginCaptures:{\"1\":{name:\"keyword.other.pattern.haskell\"}},end:/([\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)|(\\()\\p{space}*(:[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*(\\))/dgv,endCaptures:{\"1\":{name:\"constant.other.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"constant.other.operator.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comment_like\"}]},{begin:/\\b(?<!')(type)\\b(?!')/dgv,beginCaptures:{\"1\":{name:\"keyword.other.type.haskell\"}},end:/([\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)|(\\()\\p{space}*([[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*(\\))/dgv,endCaptures:{\"1\":{name:\"storage.type.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"storage.type.operator.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comment_like\"}]},{match:/(?<!')\\b[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*/dgv,name:\"entity.name.function.haskell\"},{match:/(?<!')\\b[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*/dgv,name:\"storage.type.haskell\"},{include:\"#record_wildcard\"},{include:\"#reserved_symbol\"},{include:\"#prefix_op\"}]},ffi:{begin:/^(\\p{space}*)(foreign)\\p{space}+((?:im|ex)port)\\p{space}+/dgv,beginCaptures:{\"2\":{name:\"keyword.other.foreign.haskell\"},\"3\":{name:\"keyword.other.$3.haskell\"}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.$3.foreign.haskell\",patterns:[{include:\"#comment_like\"},{captures:{\"1\":{name:\"keyword.other.calling-convention.$1.haskell\"}},match:/\\b(?<!')(ccall|cplusplus|dotnet|jvm|stdcall|prim|capi)\\p{space}+/dgv},{begin:/(?=\")|(?=\\b(?<!')([_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)\\b(?!'))/dgv,end:/(?=(::|∷)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]))/dgv,patterns:[{include:\"#comment_like\"},{captures:{\"1\":{name:\"keyword.other.safety.$1.haskell\"},\"2\":{name:\"entity.name.foreign.haskell\",patterns:[{include:\"#string_literal\"}]},\"3\":{name:\"entity.name.function.haskell\"},\"4\":{name:\"entity.name.function.infix.haskell\"}},match:/\\b(?<!')(safe|unsafe|interruptible)\\b(?!')\\p{space}*(\"(?:\\\\\"|[^\"])*\")?\\p{space}*(?:\\b(?<!'')([_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)\\b(?!')|\\(\\p{space}*(?!--+\\))([[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*\\))/dgv},{captures:{\"1\":{name:\"keyword.other.safety.$1.haskell\"},\"2\":{name:\"entity.name.foreign.haskell\",patterns:[{include:\"#string_literal\"}]}},match:/\\b(?<!')(safe|unsafe|interruptible)\\b(?!')\\p{space}*(\"(?:\\\\\"|[^\"])*\")?\\p{space}*(?=\\n?$)/dgv},{captures:{\"0\":{name:\"entity.name.foreign.haskell\",patterns:[{include:\"#string_literal\"}]}},match:/\"(?:\\\\\"|[^\"])*\"/dgv},{captures:{\"1\":{name:\"entity.name.function.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"entity.name.function.infix.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},match:/\\b(?<!'')([_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)\\b(?!')|(\\()\\p{space}*(?!--+\\))([[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*(\\))/dgv}]},{include:\"#double_colon\"},{include:\"#type_signature\"}]},float_literals:{captures:{\"1\":{name:\"constant.numeric.floating.decimal.haskell\"},\"2\":{name:\"constant.numeric.floating.hexadecimal.haskell\"}},match:/\\b(?<!')(?:([0-9][0-9_]*\\.[0-9][0-9_]*(?:[Ee][\\-\\+]?[0-9][0-9_]*)?|[0-9][0-9_]*[Ee][\\-\\+]?[0-9][0-9_]*)|(0(?:[Xx]_*\\p{AHex}[_\\p{AHex}]*\\.\\p{AHex}[_\\p{AHex}]*(?:[Pp][\\-\\+]?[0-9][0-9_]*)?|[Xx]_*\\p{AHex}[_\\p{AHex}]*[Pp][\\-\\+]?[0-9][0-9_]*)))\\b(?!')/dgv},forall:{begin:/\\b(?<!')(forall|∀)\\b(?!')/dgv,beginCaptures:{\"1\":{name:\"keyword.other.forall.haskell\"}},end:/(\\.)|(->|→)/dgv,endCaptures:{\"1\":{name:\"keyword.operator.period.haskell\"},\"2\":{name:\"keyword.operator.arrow.haskell\"}},patterns:[{include:\"#comment_like\"},{include:\"#type_variable\"},{include:\"#type_signature\"}]},fun_decl:{begin:/^(\\p{space}*)(?<fn>(?:[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*#*|\\(\\p{space}*(?!--+\\))[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\:\\;\\[_\\`\\{\\}]][[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*\\p{space}*\\))(?:\\p{space}*,\\p{space}*(?:(?:[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*#*|\\(\\p{space}*(?!--+\\))[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\:\\;\\[_\\`\\{\\}]][[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*\\p{space}*\\))(?:\\p{space}*,\\p{space}*(?:(?:[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*#*|\\(\\p{space}*(?!--+\\))[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\:\\;\\[_\\`\\{\\}]][[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*\\p{space}*\\))(?:\\p{space}*,\\p{space}*(?:(?:[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*#*|\\(\\p{space}*(?!--+\\))[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\:\\;\\[_\\`\\{\\}]][[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*\\p{space}*\\))(?:\\p{space}*,\\p{space}*(?:(?:[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*#*|\\(\\p{space}*(?!--+\\))[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\:\\;\\[_\\`\\{\\}]][[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*\\p{space}*\\))(?:\\p{space}*,\\p{space}*(?:))?))?))?))?))?)\\p{space}*(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\)\\,\\;_\\`\\}]])(::|∷)(?![[\\p{S}\\p{P}]&&[^\"'\\(\\,\\;\\[_\\`\\{]])/dgv,beginCaptures:{\"2\":{name:\"entity.name.function.haskell\",patterns:[{include:\"#reserved_symbol\"},{include:\"#prefix_op\"}]},\"3\":{name:\"keyword.operator.double-colon.haskell\"}},end:/(?=(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])((<-|←)|(=)|(-<|↢)|(-<<|⤛))([\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}[^\\p{S}\\p{P}]]))|(?=[\\;\\}])|^(?!(?!)\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))/dgv,name:\"meta.function.type-declaration.haskell\",patterns:[{include:\"#type_signature\"}]},gadt_constructor:{patterns:[{begin:/^(\\p{space}*)(?:\\b((?<!')[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)|(\\()\\p{space}*(:[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*)\\p{space}*(\\)))/dgv,beginCaptures:{\"2\":{name:\"constant.other.haskell\"},\"3\":{name:\"punctuation.paren.haskell\"},\"4\":{name:\"constant.other.operator.haskell\"},\"5\":{name:\"punctuation.paren.haskell\"}},end:/(?=\\b(?<!'')deriving\\b(?!'))|(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,patterns:[{include:\"#comment_like\"},{include:\"#deriving\"},{include:\"#double_colon\"},{include:\"#record_decl\"},{include:\"#type_signature\"}]},{begin:/\\b((?<!')[\\p{Lu}\\p{Lt}][_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)|(\\()\\p{space}*(:[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]*)\\p{space}*(\\))/dgv,beginCaptures:{\"1\":{name:\"constant.other.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"constant.other.operator.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},end:/(?=\\n?$)/dgv,patterns:[{include:\"#comment_like\"},{include:\"#deriving\"},{include:\"#double_colon\"},{include:\"#record_decl\"},{include:\"#type_signature\"}]}]},infix_op:{patterns:[{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"entity.name.namespace.haskell\"},\"3\":{name:\"keyword.operator.infix.haskell\"}},match:/((?:(?<!'')('')?[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\.)*)(#+|[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+(?<!#))/dgv},{captures:{\"1\":{name:\"punctuation.backtick.haskell\"},\"2\":{name:\"entity.name.namespace.haskell\"},\"3\":{patterns:[{include:\"#data_constructor\"}]},\"4\":{name:\"punctuation.backtick.haskell\"}},match:/(`)((?:[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\.)*)([_\\p{Ll}\\p{Lu}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)(`)/dgv,name:\"keyword.operator.function.infix.haskell\"}]},inline_phase:{begin:/\\[/dgv,beginCaptures:{\"0\":{name:\"punctuation.bracket.haskell\"}},end:/\\]/dgv,endCaptures:{\"0\":{name:\"punctuation.bracket.haskell\"}},name:\"meta.inlining-phase.haskell\",patterns:[{match:/~/dgv,name:\"punctuation.tilde.haskell\"},{include:\"#integer_literals\"},{match:/[\\p{L}\\p{M}\\p{N}\\p{Pc}]*/dgv,name:\"invalid\"}]},integer_literals:{captures:{\"1\":{name:\"constant.numeric.integral.decimal.haskell\"},\"2\":{name:\"constant.numeric.integral.hexadecimal.haskell\"},\"3\":{name:\"constant.numeric.integral.octal.haskell\"},\"4\":{name:\"constant.numeric.integral.binary.haskell\"}},match:/\\b(?<!')(?:([0-9][0-9_]*)|(0[Xx]_*\\p{AHex}[_\\p{AHex}]*)|(0[Oo]_*[0-7][0-7_]*)|(0[Bb]_*[01][01_]*))\\b(?!')/dgv},keyword:{captures:{\"1\":{name:\"keyword.other.$1.haskell\"},\"2\":{name:\"keyword.control.$2.haskell\"}},match:/\\b(?<!')(?:(where|let|in|default)|(m?do|if|then|else|case|of|proc|rec))\\b(?!')/dgv},layout_herald:{begin:/(?<!')\\b(?:(where|let|m?do)|(of))\\p{space}*(\\{)(?!-)/dgv,beginCaptures:{\"1\":{name:\"keyword.other.$1.haskell\"},\"2\":{name:\"keyword.control.of.haskell\"},\"3\":{name:\"punctuation.brace.haskell\"}},end:/(\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},patterns:[{include:\"$self\"},{match:/;/dgv,name:\"punctuation.semicolon.haskell\"}]},liquid_haskell:{begin:/\\{-@/dgv,end:/@-\\}/dgv,name:\"block.liquidhaskell.haskell\",patterns:[{include:\"$self\"}]},module_exports:{applyEndPatternLast:1,begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.paren.haskell\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.paren.haskell\"}},name:\"meta.declaration.exports.haskell\",patterns:[{include:\"#comment_like\"},{captures:{\"1\":{name:\"keyword.other.module.haskell\"}},match:/\\b(?<!')(module)\\b(?!')/dgv},{include:\"#comma\"},{include:\"#export_constructs\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.paren.haskell\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comment_like\"},{include:\"#record_wildcard\"},{include:\"#export_constructs\"},{include:\"#comma\"}]}]},module_name:{match:/*@__PURE__*/ new EmulatedRegExp(\"(?<conid>[\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*(\\\\.(?:[\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*(\\\\.(?:[\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*(\\\\.(?:[\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*(\\\\.(?:[\\\\p{Lu}\\\\p{Lt}]['_\\\\p{Ll}\\\\p{Lu}\\\\p{Lt}\\\\p{Nd}]*(\\\\.(?:))?))?))?))?))?)\",\"dgv\",{\"hiddenCaptures\":[3,4,5,6]}),name:\"entity.name.namespace.haskell\"},numeric_literals:{patterns:[{include:\"#float_literals\"},{include:\"#integer_literals\"}]},overloaded_label:{patterns:[{captures:{\"1\":{name:\"keyword.operator.prefix.hash.haskell\"},\"2\":{patterns:[{include:\"#string_literal\"}]}},match:/(?<![[_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}\\p{S}\\p{P}]&&[^\\(\\,\\;\\[\\`\\{]])(#)(?:(\"(?:\\\\\"|[^\"])*\")|['\\._\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]+)/dgv,name:\"entity.name.label.haskell\"}]},pragma:{begin:/\\{-#/dgv,end:/#-\\}/dgv,name:\"meta.preprocessor.haskell\",patterns:[{begin:/\\b(?<!')(LANGUAGE)\\b(?!')/dgiv,beginCaptures:{\"1\":{name:\"keyword.other.preprocessor.pragma.haskell\"}},end:/(?=#-\\})/dgv,patterns:[{match:/(?:No)?(?:AutoDeriveTypeable|DatatypeContexts|DoRec|IncoherentInstances|MonadFailDesugaring|MonoPatBinds|NullaryTypeClasses|OverlappingInstances|PatternSignatures|RecordPuns|RelaxedPolyRec)/dgv,name:\"invalid.deprecated\"},{captures:{\"1\":{name:\"keyword.other.preprocessor.extension.haskell\"}},match:/((?:No)?(?:AllowAmbiguousTypes|AlternativeLayoutRule|AlternativeLayoutRuleTransitional|Arrows|BangPatterns|BinaryLiterals|CApiFFI|CPP|CUSKs|ConstrainedClassMethods|ConstraintKinds|DataKinds|DefaultSignatures|DeriveAnyClass|DeriveDataTypeable|DeriveFoldable|DeriveFunctor|DeriveGeneric|DeriveLift|DeriveTraversable|DerivingStrategies|DerivingVia|DisambiguateRecordFields|DoAndIfThenElse|BlockArguments|DuplicateRecordFields|EmptyCase|EmptyDataDecls|EmptyDataDeriving|ExistentialQuantification|ExplicitForAll|ExplicitNamespaces|ExtendedDefaultRules|FlexibleContexts|FlexibleInstances|ForeignFunctionInterface|FunctionalDependencies|GADTSyntax|GADTs|GHCForeignImportPrim|Generali[sz]edNewtypeDeriving|ImplicitParams|ImplicitPrelude|ImportQualifiedPost|ImpredicativeTypes|TypeFamilyDependencies|InstanceSigs|ApplicativeDo|InterruptibleFFI|JavaScriptFFI|KindSignatures|LambdaCase|LiberalTypeSynonyms|MagicHash|MonadComprehensions|MonoLocalBinds|MonomorphismRestriction|MultiParamTypeClasses|MultiWayIf|NumericUnderscores|NPlusKPatterns|NamedFieldPuns|NamedWildCards|NegativeLiterals|HexFloatLiterals|NondecreasingIndentation|NumDecimals|OverloadedLabels|OverloadedLists|OverloadedStrings|PackageImports|ParallelArrays|ParallelListComp|PartialTypeSignatures|PatternGuards|PatternSynonyms|PolyKinds|PolymorphicComponents|QuantifiedConstraints|PostfixOperators|QuasiQuotes|Rank2Types|RankNTypes|RebindableSyntax|RecordWildCards|RecursiveDo|RelaxedLayout|RoleAnnotations|ScopedTypeVariables|StandaloneDeriving|StarIsType|StaticPointers|Strict|StrictData|TemplateHaskell|TemplateHaskellQuotes|StandaloneKindSignatures|TraditionalRecordSyntax|TransformListComp|TupleSections|TypeApplications|TypeInType|TypeFamilies|TypeOperators|TypeSynonymInstances|UnboxedTuples|UnboxedSums|UndecidableInstances|UndecidableSuperClasses|UnicodeSyntax|UnliftedFFITypes|UnliftedNewtypes|ViewPatterns))/dgv},{include:\"#comma\"}]},{begin:/\\b(?<!')(SPECIALI[SZ]E)(?:\\p{space}*(\\[[^\\]\\[]*\\])?\\p{space}*|\\p{space}+)(instance)\\b(?!')/dgiv,beginCaptures:{\"1\":{name:\"keyword.other.preprocessor.pragma.haskell\"},\"2\":{patterns:[{include:\"#inline_phase\"}]},\"3\":{name:\"keyword.other.instance.haskell\"}},end:/(?=#-\\})/dgv,patterns:[{include:\"#type_signature\"}]},{begin:/\\b(?<!')(SPECIALI[SZ]E)\\b(?!')(?:\\p{space}+(INLINE)\\b(?!'))?\\p{space}*(\\[[^\\]\\[]*\\])?\\p{space}*/dgiv,beginCaptures:{\"1\":{name:\"keyword.other.preprocessor.pragma.haskell\"},\"2\":{name:\"keyword.other.preprocessor.pragma.haskell\"},\"3\":{patterns:[{include:\"#inline_phase\"}]}},end:/(?=#-\\})/dgv,patterns:[{include:\"$self\"}]},{match:/\\b(?<!')(LANGUAGE|OPTIONS_GHC|INCLUDE|MINIMAL|UNPACK|OVERLAPS|INCOHERENT|NOUNPACK|SOURCE|OVERLAPPING|OVERLAPPABLE|INLINE|NOINLINE|INLINE?ABLE|CONLIKE|LINE|COLUMN|RULES|COMPLETE)\\b(?!')/dgiv,name:\"keyword.other.preprocessor.haskell\"},{begin:/\\b(DEPRECATED|WARNING)\\b/dgiv,beginCaptures:{\"1\":{name:\"keyword.other.preprocessor.pragma.haskell\"}},end:/(?=#-\\})/dgv,patterns:[{include:\"#string_literal\"}]}]},prefix_op:{patterns:[{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"entity.name.function.infix.haskell\"},\"3\":{name:\"punctuation.paren.haskell\"}},match:/(\\()\\p{space}*(?!(?:--+|\\.\\.)\\))(#+|[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+(?<!#))\\p{space}*(\\))/dgv}]},qualifier:{match:/\\b(?<!')[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\./dgv,name:\"entity.name.namespace.haskell\"},quasi_quote:{patterns:[{begin:/(\\[)([dep])?(\\|\\|?)/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.quasi-quotation.begin.haskell\"},\"2\":{name:\"entity.name.quasi-quoter.haskell\"},\"3\":{name:\"keyword.operator.quasi-quotation.begin.haskell\"}},end:/\\3\\]()()()/dgv,endCaptures:{\"0\":{name:\"keyword.operator.quasi-quotation.end.haskell\"}},name:\"meta.quasi-quotation.haskell\",patterns:[{include:\"$self\"}]},{begin:/(\\[)(t)(\\|\\|?)/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.quasi-quotation.begin.haskell\"},\"2\":{name:\"entity.name.quasi-quoter.haskell\"},\"3\":{name:\"keyword.operator.quasi-quotation.begin.haskell\"}},end:/\\3\\]()()()/dgv,endCaptures:{\"0\":{name:\"keyword.operator.quasi-quotation.end.haskell\"}},name:\"meta.quasi-quotation.haskell\",patterns:[{include:\"#type_signature\"}]},{begin:/(\\[)(?:(\\$\\$)|(\\$))?(['\\._[^\\p{space}\\p{S}\\p{P}]]*)(\\|\\|?)/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.quasi-quotation.begin.haskell\"},\"2\":{name:\"keyword.operator.prefix.double-dollar.haskell\"},\"3\":{name:\"keyword.operator.prefix.dollar.haskell\"},\"4\":{name:\"entity.name.quasi-quoter.haskell\",patterns:[{include:\"#qualifier\"}]},\"5\":{name:\"keyword.operator.quasi-quotation.begin.haskell\"}},end:/\\5\\]()()()()()/dgv,endCaptures:{\"0\":{name:\"keyword.operator.quasi-quotation.end.haskell\"}},name:\"meta.quasi-quotation.haskell\"}]},record:{begin:/(\\{)(?!-)/dgv,beginCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},end:/(?<!-)(\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},name:\"meta.record.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#record_field\"}]},record_decl:{begin:/(\\{)(?!-)/dgv,beginCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},end:/(?<!-)(\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},name:\"meta.record.definition.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#record_decl_field\"}]},record_decl_field:{begin:/([_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)|(\\()\\p{space}*([[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*(\\))/dgv,beginCaptures:{\"1\":{name:\"variable.other.member.definition.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"variable.other.member.definition.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},end:/(,)|(?=\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.comma.haskell\"}},patterns:[{include:\"#comment_like\"},{include:\"#comma\"},{include:\"#double_colon\"},{include:\"#type_signature\"},{include:\"#record_decl_field\"}]},record_field:{patterns:[{begin:/([_\\p{Ll}\\p{Lu}]['\\._\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)|(\\()\\p{space}*([[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*(\\))/dgv,beginCaptures:{\"1\":{name:\"variable.other.member.haskell\",patterns:[{include:\"#qualifier\"}]},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"variable.other.member.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},end:/(,)|(?=\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.comma.haskell\"}},patterns:[{include:\"#comment_like\"},{include:\"#comma\"},{include:\"$self\"}]},{include:\"#record_wildcard\"}]},record_wildcard:{captures:{\"1\":{name:\"variable.other.member.wildcard.haskell\"}},match:/(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(\\.\\.)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])/dgv},reserved_symbol:{patterns:[{captures:{\"1\":{name:\"keyword.operator.double-dot.haskell\"},\"2\":{name:\"keyword.operator.colon.haskell\"},\"3\":{name:\"keyword.operator.eq.haskell\"},\"4\":{name:\"keyword.operator.lambda.haskell\"},\"5\":{name:\"keyword.operator.pipe.haskell\"},\"6\":{name:\"keyword.operator.arrow.left.haskell\"},\"7\":{name:\"keyword.operator.arrow.haskell\"},\"8\":{name:\"keyword.operator.arrow.left.tail.haskell\"},\"9\":{name:\"keyword.operator.arrow.left.tail.double.haskell\"},\"10\":{name:\"keyword.operator.arrow.tail.haskell\"},\"11\":{name:\"keyword.operator.arrow.tail.double.haskell\"},\"12\":{name:\"keyword.other.forall.haskell\"}},match:/(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:(\\.\\.)|(:)|(=)|(\\\\)|(\\|)|(<-|←)|(->|→)|(-<|↢)|(-<<|⤛)|(>-|⤚)|(>>-|⤜)|(∀))(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])/dgv},{captures:{\"1\":{name:\"keyword.operator.postfix.hash.haskell\"}},match:/(?<=[[_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}\\p{S}\\p{P}]&&[^\\#\\,\\;\\[\\`\\{]])(#+)(?![[_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}\\p{S}\\p{P}]&&[^\\]\\)\\,\\;\\`\\}]])/dgv},{captures:{\"1\":{name:\"keyword.operator.infix.tight.at.haskell\"}},match:/(?<=[\\]\\)_\\}\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}])(@)(?=[\\(\\[_\\{\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}])/dgv},{captures:{\"1\":{name:\"keyword.operator.prefix.tilde.haskell\"},\"2\":{name:\"keyword.operator.prefix.bang.haskell\"},\"3\":{name:\"keyword.operator.prefix.minus.haskell\"},\"4\":{name:\"keyword.operator.prefix.dollar.haskell\"},\"5\":{name:\"keyword.operator.prefix.double-dollar.haskell\"}},match:/(?<![[_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}\\p{S}\\p{P}]&&[^\\(\\,\\;\\[\\`\\{]])(?:(~)|(!)|(-)|(\\$)|(\\$\\$))(?=[\\(\\[_\\{\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}])/dgv}]},role_annotation:{patterns:[{begin:/^(\\p{space}*)(type)\\p{space}+(role)\\b(?!')/dgv,beginCaptures:{\"2\":{name:\"keyword.other.type.haskell\"},\"3\":{name:\"keyword.other.role.haskell\"}},end:/(?=[\\;\\}])|^(?!\\1\\p{space}+\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$)))()/dgv,name:\"meta.role-annotation.haskell\",patterns:[{include:\"#comment_like\"},{include:\"#type_constructor\"},{captures:{\"1\":{name:\"keyword.other.role.$1.haskell\"}},match:/\\b(?<!')(nominal|representational|phantom)\\b(?!')/dgv}]}]},start_type_signature:{patterns:[{begin:/^(\\p{space}*)(::|∷)(?![[\\p{S}\\p{P}]&&[^\"'\\(\\,\\;\\[_\\`\\{]])\\p{space}*/dgv,beginCaptures:{\"2\":{name:\"keyword.operator.double-colon.haskell\"}},end:/(?=#?\\)|[\\]\\,]|(?<!')\\b(in|then|else|of)\\b(?!')|(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:([\\\\λ])|(<-|←)|(=)|(-<|↢)|(-<<|⤛))([\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}[^\\p{S}\\p{P}]])|([\\#\\@])-\\}|(?=[\\;\\}])|^(?!(?!)\\p{space}*\\P{space}|\\p{space}*(?:(?=\\n?$)|\\{-[^\\@]|--+(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])[^\\n]*(?=\\n?$))))/dgv,name:\"meta.type-declaration.haskell\",patterns:[{include:\"#type_signature\"}]},{begin:/(?<![[\\p{S}\\p{P}]&&[^\"'\\(\\,\\;\\[_\\`\\{]])(::|∷)(?![[\\p{S}\\p{P}]&&[^\"'\\(\\,\\;\\[_\\`\\{]])/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.double-colon.haskell\"}},end:/(?=#?\\)|[\\]\\,]|\\b(?<!')(in|then|else|of)\\b(?!')|([\\#\\@])-\\}|(?<![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])(?:([\\\\λ])|(<-|←)|(=)|(-<|↢)|(-<<|⤛))([\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}[^\\p{S}\\p{P}]])|(?=[\\;\\}])|(?=\\n?$))/dgv,patterns:[{include:\"#type_signature\"}]}]},string_literal:{begin:/\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.haskell\"}},end:/\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.haskell\"}},name:\"string.quoted.double.haskell\",patterns:[{match:/\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[\"\\&'\\\\abfnrtv])/dgv,name:\"constant.character.escape.haskell\"},{match:/\\\\(?:o[0-7]+|x\\p{AHex}+|[0-9]+)/dgv,name:\"constant.character.escape.octal.haskell\"},{match:/\\\\\\^[\\@-_]/dgv,name:\"constant.character.escape.control.haskell\"},{begin:/\\\\\\p{space}/dgv,beginCaptures:{\"0\":{name:\"constant.character.escape.begin.haskell\"}},end:/\\\\/dgv,endCaptures:{\"0\":{name:\"constant.character.escape.end.haskell\"}},patterns:[{match:/\\P{space}+/dgv,name:\"invalid.illegal.character-not-allowed-here.haskell\"}]}]},type_application:{patterns:[{begin:/(?<=[\\]\"\\,\\;\\[\\{\\}\\p{space}])(@)(')?(\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.prefix.at.haskell\"},\"2\":{name:\"keyword.operator.promotion.haskell\"},\"3\":{name:\"punctuation.paren.haskell\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.paren.haskell\"}},name:\"meta.type-application.haskell\",patterns:[{include:\"#type_signature\"}]},{begin:/(?<=[\\]\"\\,\\;\\[\\{\\}\\p{space}])(@)(')?(\\[)/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.prefix.at.haskell\"},\"2\":{name:\"keyword.operator.promotion.haskell\"},\"3\":{name:\"punctuation.bracket.haskell\"}},end:/\\]/dgv,endCaptures:{\"0\":{name:\"punctuation.bracket.haskell\"}},name:\"meta.type-application.haskell\",patterns:[{include:\"#type_signature\"}]},{begin:/(?<=[\\]\"\\,\\;\\[\\{\\}\\p{space}])(@)(?=\")/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.prefix.at.haskell\"}},end:/(?<=\")/dgv,name:\"meta.type-application.haskell\",patterns:[{include:\"#string_literal\"}]},{begin:/(?<=[\\]\"\\,\\;\\[\\{\\}\\p{space}])(@)(?=['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}])/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.prefix.at.haskell\"}},end:/(?!['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}])/dgv,name:\"meta.type-application.haskell\",patterns:[{include:\"#type_signature\"}]}]},type_constructor:{patterns:[{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"entity.name.namespace.haskell\"},\"3\":{name:\"storage.type.haskell\"}},match:/(')?((?:\\b[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\.)*)\\b([\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)/dgv},{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"entity.name.namespace.haskell\"},\"4\":{name:\"storage.type.operator.haskell\"},\"5\":{name:\"punctuation.paren.haskell\"}},match:/(')?(\\()\\p{space}*((?:[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\.)*)([[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+)\\p{space}*(\\))/dgv}]},type_operator:{patterns:[{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"entity.name.namespace.haskell\"},\"3\":{name:\"storage.type.operator.infix.haskell\"}},match:/(?:(?<!')('))?((?:\\b[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\.)*)(?![\\#\\@]?-\\})(#+|[[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]]+(?<!#))/dgv},{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.backtick.haskell\"},\"3\":{name:\"entity.name.namespace.haskell\"},\"4\":{name:\"storage.type.infix.haskell\"},\"5\":{name:\"punctuation.backtick.haskell\"}},match:/(')?(`)((?:[\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*\\.)*)([\\p{Lu}\\p{Lt}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*)(`)/dgv}]},type_signature:{patterns:[{include:\"#comment_like\"},{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"punctuation.paren.haskell\"}},match:/(')?(\\()\\p{space}*(\\))/dgv,name:\"support.constant.unit.haskell\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"},\"3\":{name:\"keyword.operator.hash.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},match:/(\\()(#)\\p{space}*(#)(\\))/dgv,name:\"support.constant.unit.unboxed.haskell\"},{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"},\"3\":{name:\"punctuation.paren.haskell\"}},match:/(')?(\\()\\p{space}*,[\\,\\p{space}]*(\\))/dgv,name:\"support.constant.tuple.haskell\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"},\"3\":{name:\"keyword.operator.hash.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},match:/(\\()(#)\\p{space}*(#)(\\))/dgv,name:\"support.constant.unit.unboxed.haskell\"},{captures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"},\"3\":{name:\"keyword.operator.hash.haskell\"},\"4\":{name:\"punctuation.paren.haskell\"}},match:/(\\()(#)\\p{space}*,[\\,\\p{space}]*(#)(\\))/dgv,name:\"support.constant.tuple.unboxed.haskell\"},{captures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.bracket.haskell\"},\"3\":{name:\"punctuation.bracket.haskell\"}},match:/(')?(\\[)\\p{space}*(\\])/dgv,name:\"support.constant.empty-list.haskell\"},{include:\"#integer_literals\"},{match:/(::|∷)(?![[\\p{S}\\p{P}]&&[^\\]\"'\\(\\)\\,\\;\\[_\\`\\{\\}]])/dgv,name:\"keyword.operator.double-colon.haskell\"},{include:\"#forall\"},{match:/=>|⇒/dgv,name:\"keyword.operator.big-arrow.haskell\"},{include:\"#string_literal\"},{match:/'[^']'/dgv,name:\"invalid\"},{include:\"#type_application\"},{include:\"#reserved_symbol\"},{include:\"#type_operator\"},{include:\"#type_constructor\"},{begin:/(\\()(#)/dgv,beginCaptures:{\"1\":{name:\"punctuation.paren.haskell\"},\"2\":{name:\"keyword.operator.hash.haskell\"}},end:/(#)(\\))/dgv,endCaptures:{\"1\":{name:\"keyword.operator.hash.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comma\"},{include:\"#type_signature\"}]},{begin:/(')?(\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.paren.haskell\"}},end:/(\\))/dgv,endCaptures:{\"1\":{name:\"punctuation.paren.haskell\"}},patterns:[{include:\"#comma\"},{include:\"#type_signature\"}]},{begin:/(')?(\\[)/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.promotion.haskell\"},\"2\":{name:\"punctuation.bracket.haskell\"}},end:/(\\])/dgv,endCaptures:{\"1\":{name:\"punctuation.bracket.haskell\"}},patterns:[{include:\"#comma\"},{include:\"#type_signature\"}]},{include:\"#type_variable\"}]},type_variable:{match:/\\b(?<!')(?!(?:forall|deriving)\\b(?!'))[_\\p{Ll}]['_\\p{Ll}\\p{Lu}\\p{Lt}\\p{Nd}]*/dgv,name:\"variable.other.generic-type.haskell\"},where:{patterns:[{begin:/(?<!')\\b(where)\\p{space}*(\\{)(?!-)/dgv,beginCaptures:{\"1\":{name:\"keyword.other.where.haskell\"},\"2\":{name:\"punctuation.brace.haskell\"}},end:/(\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.brace.haskell\"}},patterns:[{include:\"$self\"},{match:/;/dgv,name:\"punctuation.semicolon.haskell\"}]},{match:/\\b(?<!')(where)\\b(?!')/dgv,name:\"keyword.other.where.haskell\"}]}},scopeName:\"source.haskell\",embeddedLangs:undefined,aliases:[\"hs\"]})\n\nexport default [\nlang\n]\n"],"names":["lang","EmulatedRegExp","haskell"],"mappings":"wCAEA,MAAMA,EAAO,OAAO,OAAO,CAAC,YAAY,UAAU,UAAU,CAAC,KAAK,UAAU,MAAM,EAAE,KAAK,UAAU,SAAS,CAAC,CAAC,QAAQ,iBAAiB,EAAE,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,QAAQ,iBAAiB,EAAE,CAAC,QAAQ,eAAe,EAAE,CAAC,MAAM,WAAA,oBAAA,KAAmB,EAAC,KAAK,SAAS,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,wBAAA,KAAuB,EAAC,KAAK,gCAAgC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,8BAAA,KAA6B,EAAC,KAAK,wCAAwC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,yCAAA,KAAsC,EAAC,KAAK,gCAAgC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,+CAAA,KAA4C,EAAC,KAAK,wCAAwC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,6BAA6B,EAAE,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,MAAM,WAAA,wBAAA,KAAuB,EAAC,KAAK,sCAAsC,EAAE,CAAC,MAAM,6DAA6C,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,KAAK,iCAAiC,CAAC,EAAE,IAAI,WAAA,6BAAA,KAA6B,EAAC,KAAK,kCAAkC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,QAAQ,iBAAiB,EAAE,CAAC,MAAM,yBAAW,EAAC,KAAK,SAAS,CAAC,CAAC,EAAE,CAAC,QAAQ,MAAM,EAAE,CAAC,MAAM,WAAA,kCAAA,KAAkC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,IAAI,0MAAmK,EAAC,KAAK,iCAAiC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,oRAAA,KAAqP,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,0BAA0B,EAAE,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI,WAAA,6LAAA,KAAsK,EAAC,KAAK,0CAA0C,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,MAAM,WAAA,wCAAA,KAAuC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6BAA6B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,MAAM,oBAAM,EAAC,KAAK,+BAA+B,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,2BAAA,KAA2B,EAAC,KAAK,6BAA6B,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,mBAAmB,CAAC,CAAC,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,MAAM,WAAA,wHAAA,KAA0G,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,mBAAmB,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,IAAI,WAAA,+JAAA,KAA0I,EAAC,KAAK,wCAAwC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,gCAAA,KAAgC,EAAC,SAAS,CAAC,EAAI,CAAC,KAAK,+BAA+B,CAAC,EAAE,IAAI,WAAA,+JAAA,KAA0I,EAAC,KAAK,mCAAmC,SAAS,CAAC,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,6QAAgO,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,0BAA0B,EAAE,EAAI,CAAC,KAAK,0BAA0B,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI,WAAA,+JAAA,KAA0I,EAAC,KAAK,wCAAwC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,SAAS,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,UAAU,EAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,uNAAA,KAA0L,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,4BAA4B,EAAE,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI,+KAA0I,EAAC,KAAK,uCAAuC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,+MAAA,KAAoL,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,4BAA4B,EAAE,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,IAAI,+KAA0I,EAAC,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,qDAAqC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gCAAgC,CAAC,EAAE,IAAI,WAAA,2LAAA,KAAqK,EAAC,KAAK,oCAAoC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,mCAAA,KAAmC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,8BAA8B,CAAC,EAAE,IAAI,WAAA,2LAAA,KAAqK,EAAC,KAAK,sBAAsB,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,0BAA0B,CAAC,EAAE,MAAM,WAAA,wBAAA,KAA0B,GAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,gBAAgB,EAAE,CAAC,QAAQ,UAAU,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,0BAA0B,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,QAAQ,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,WAAA,+CAAA,KAA8C,EAAC,KAAK,iCAAiC,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,YAAY,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,QAAQ,uBAAuB,EAAE,CAAC,QAAQ,YAAY,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,MAAM,WAAA,qBAAA,KAAqB,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,CAAC,EAAE,IAAI,2BAAY,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,wBAAS,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,MAAM,wBAAS,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,SAAS,CAAC,EAAE,WAAW,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,MAAM,WAAA,iIAAA,KAA0G,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6BAA6B,EAAE,EAAI,CAAC,KAAK,+BAA+B,CAAC,EAAE,IAAkB,IAAIC,EAAe,yrBAAyrB,MAAM,CAAC,SAAW,aAAa,CAAC,EAAE,YAAY,CAAC,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,KAAK,wBAAwB,EAAE,EAAI,CAAC,KAAK,8BAA8B,EAAE,GAAK,CAAC,KAAK,wBAAwB,EAAE,GAAK,CAAC,KAAK,2BAA2B,EAAE,GAAK,CAAC,KAAK,iCAAiC,EAAE,GAAK,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,QAAQ,SAAS,EAAE,CAAC,QAAQ,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,oBAAoB,EAAE,MAAM,WAAA,OAAA,KAAQ,EAAC,SAAS,CAAC,EAAI,CAAC,KAAK,wCAAwC,CAAC,EAAE,IAAI,WAAA,OAAA,KAAQ,EAAC,KAAK,wBAAwB,SAAS,CAAC,CAAC,QAAQ,gBAAgB,CAAC,CAAC,EAAE,aAAa,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,6CAA6C,EAAE,EAAI,CAAC,KAAK,mCAAmC,EAAE,EAAI,CAAC,KAAK,yCAAyC,EAAE,EAAI,CAAC,KAAK,+CAA+C,EAAE,EAAI,CAAC,KAAK,2CAA2C,EAAE,EAAI,CAAC,KAAK,2CAA2C,CAAC,EAAE,MAAM,WAAA,wQAAA,KAAqP,EAAC,KAAK,8BAA8B,EAAE,MAAM,CAAC,MAAM,oBAAM,EAAC,KAAK,qCAAqC,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC,QAAQ,MAAM,EAAE,CAAC,QAAQ,SAAS,EAAE,CAAC,QAAQ,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,uCAAA,KAAqC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gDAAgD,CAAC,EAAE,IAAI,WAAA,4EAAA,KAAiE,EAAC,KAAK,qCAAqC,EAAE,CAAC,MAAM,oDAAkC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gDAAgD,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,KAAK,oCAAoC,EAAE,CAAC,oBAAoB,EAAE,MAAM,WAAA,gCAAA,KAA4B,EAAC,SAAS,CAAC,EAAI,CAAC,KAAK,wCAAwC,CAAC,EAAE,IAAI,WAAA,OAAA,KAAQ,EAAC,KAAK,sCAAsC,SAAS,CAAC,CAAC,QAAQ,gBAAgB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,6EAAA,KAAkE,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gDAAgD,CAAC,EAAE,IAAkB,IAAIA,EAAe,QAAQ,MAAM,CAAC,SAAW,aAAa,CAAC,EAAE,SAAS,CAAC,CAAC,MAAM,WAAA,KAAA,KAAO,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,wCAAwC,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,KAAK,kCAAkC,CAAC,CAAC,EAAE,CAAC,QAAQ,gBAAgB,CAAC,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,oCAAoC,CAAC,EAAE,MAAM,mJAA4G,GAAE,IAAI,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,MAAM,WAAA,uBAAA,KAAuB,EAAC,KAAK,qBAAqB,EAAE,iBAAiB,CAAC,MAAM,WAAA,gGAAA,KAAsF,EAAC,KAAK,wBAAwB,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,kGAAiF,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,KAAK,4CAA4C,CAAC,EAAE,IAAI,WAAA,+JAAA,KAA0I,EAAC,KAAK,wBAAwB,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,MAAM,8CAA8B,EAAC,KAAK,gCAAgC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,4CAA4C,CAAC,EAAE,MAAM,WAAA,gDAAA,KAAgD,GAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,qEAAA,KAAoE,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,KAAK,4CAA4C,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,KAAK,wBAAwB,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,KAAK,4CAA4C,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,6CAA6C,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,MAAM,WAAA,mKAAA,KAAyJ,EAAC,KAAK,uBAAuB,EAAE,CAAC,MAAM,WAAA,yBAAA,KAAyB,EAAC,KAAK,6CAA6C,CAAC,CAAC,EAAE,aAAa,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,MAAM,WAAA,uFAAA,KAA2E,GAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,MAAM,6CAA6B,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,+BAA+B,CAAC,EAAE,IAAI,WAAA,+IAAA,KAA2H,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,wBAAwB,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,CAAC,CAAC,EAAE,CAAC,MAAM,0CAA0B,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,4BAA4B,CAAC,EAAE,IAAI,WAAA,8IAAA,KAA0H,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,sBAAsB,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,CAAC,CAAC,EAAE,CAAC,MAAM,uEAAmD,EAAC,KAAK,8BAA8B,EAAE,CAAC,MAAM,WAAA,6DAAA,KAAwD,EAAC,KAAK,sBAAsB,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,+EAA8D,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,0BAA0B,CAAC,EAAE,IAAI,WAAA,+JAAA,KAA0I,EAAC,KAAK,0BAA0B,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,6CAA6C,CAAC,EAAE,MAAM,qFAAqE,GAAE,CAAC,MAAM,2FAAsE,EAAC,IAAI,WAAA,qEAAA,KAA2D,EAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,8BAA8B,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,KAAK,oCAAoC,CAAC,EAAE,MAAM,WAAA,0PAAA,KAA8N,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,8BAA8B,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,MAAM,WAAA,kGAAA,KAA6F,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,8BAA8B,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,MAAM,WAAA,oBAAA,KAAoB,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,oLAA8I,EAAC,CAAC,EAAE,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,eAAe,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2CAA2C,EAAE,EAAI,CAAC,KAAK,+CAA+C,CAAC,EAAE,MAAM,WAAA,0QAAA,KAA0P,GAAE,OAAO,CAAC,MAAM,WAAA,8BAAA,KAA8B,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,8BAA8B,CAAC,EAAE,IAAI,WAAA,eAAA,KAAgB,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,gCAAgC,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,gBAAgB,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,4wCAAijC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,+BAA+B,SAAS,CAAC,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,YAAY,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,IAAI,yTAA6P,EAAC,KAAK,yCAAyC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,0KAAA,KAAoJ,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,wBAAwB,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,8LAAA,KAAuK,EAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,uJAAA,KAAkI,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,wBAAwB,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,YAAA,KAAa,EAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,WAAW,EAAE,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,cAAc,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,gCAAgC,CAAC,EAAE,MAAM,WAAA,0IAAA,KAAyH,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,mBAAmB,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,8BAA8B,CAAC,EAAE,MAAM,WAAA,wHAAA,KAA6G,EAAC,KAAK,yCAAyC,CAAC,CAAC,EAAE,aAAa,CAAC,MAAM,WAAA,MAAA,KAAO,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,KAAK,8BAA8B,SAAS,CAAC,CAAC,MAAM,WAAA,IAAA,KAAM,EAAC,KAAK,2BAA2B,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,MAAM,WAAA,+BAAA,KAA6B,EAAC,KAAK,SAAS,CAAC,CAAC,EAAE,iBAAiB,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2CAA2C,EAAE,EAAI,CAAC,KAAK,+CAA+C,EAAE,EAAI,CAAC,KAAK,yCAAyC,EAAE,EAAI,CAAC,KAAK,0CAA0C,CAAC,EAAE,MAAM,WAAA,gHAAA,KAA8G,GAAE,QAAQ,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,0BAA0B,EAAE,EAAI,CAAC,KAAK,4BAA4B,CAAC,EAAE,MAAM,mGAAmF,GAAE,cAAc,CAAC,MAAM,0EAAyD,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,0BAA0B,EAAE,EAAI,CAAC,KAAK,4BAA4B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,OAAO,EAAE,CAAC,MAAM,WAAA,IAAA,KAAM,EAAC,KAAK,+BAA+B,CAAC,CAAC,EAAE,eAAe,CAAC,MAAM,WAAA,QAAA,KAAS,EAAC,IAAI,wBAAS,EAAC,KAAK,8BAA8B,SAAS,CAAC,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,eAAe,CAAC,oBAAoB,EAAE,MAAM,sBAAO,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,KAAK,mCAAmC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,8BAA8B,CAAC,EAAE,MAAM,WAAA,4BAAA,KAA4B,GAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,oBAAoB,EAAE,CAAC,MAAM,sBAAO,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,oBAAoB,EAAE,CAAC,QAAQ,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,MAAoB,IAAIA,EAAe,oTAAoT,MAAM,CAAC,eAAiB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,+BAA+B,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,EAAE,CAAC,QAAQ,mBAAmB,CAAC,CAAC,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,sCAAsC,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,EAAE,MAAM,WAAA,4IAAA,KAA0H,EAAC,KAAK,2BAA2B,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,WAAA,QAAA,KAAS,EAAC,IAAI,WAAA,QAAA,KAAS,EAAC,KAAK,4BAA4B,SAAS,CAAC,CAAC,MAAM,WAAA,8BAAA,MAA+B,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2CAA2C,CAAC,EAAE,IAAI,WAAA,YAAA,KAAa,EAAC,SAAS,CAAC,CAAC,MAAM,WAAA,gMAAA,KAAkM,EAAC,KAAK,oBAAoB,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,8CAA8C,CAAC,EAAE,MAAM,WAAA,o1DAAA,KAAs1D,GAAE,CAAC,QAAQ,QAAQ,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,sGAAA,MAAgG,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2CAA2C,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,gCAAgC,CAAC,EAAE,IAAI,WAAA,YAAA,KAAa,EAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,4GAAA,MAAqG,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2CAA2C,EAAE,EAAI,CAAC,KAAK,2CAA2C,EAAE,EAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,CAAC,CAAC,CAAC,EAAE,IAAI,WAAA,YAAA,KAAa,EAAC,SAAS,CAAC,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,6LAAA,MAA8L,EAAC,KAAK,oCAAoC,EAAE,CAAC,MAAM,WAAA,6BAAA,MAA8B,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2CAA2C,CAAC,EAAE,IAAI,WAAA,YAAA,KAAa,EAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,wIAAuG,EAAC,CAAC,EAAE,UAAU,CAAC,MAAM,WAAA,gEAAA,KAA0D,EAAC,KAAK,+BAA+B,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,yBAAA,KAAwB,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gDAAgD,EAAE,EAAI,CAAC,KAAK,kCAAkC,EAAE,EAAI,CAAC,KAAK,gDAAgD,CAAC,EAAE,IAAI,WAAA,eAAA,KAAe,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,8CAA8C,CAAC,EAAE,KAAK,+BAA+B,SAAS,CAAC,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,oBAAA,KAAmB,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gDAAgD,EAAE,EAAI,CAAC,KAAK,kCAAkC,EAAE,EAAI,CAAC,KAAK,gDAAgD,CAAC,EAAE,IAAI,+BAAe,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,8CAA8C,CAAC,EAAE,KAAK,+BAA+B,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,uEAAA,KAA+D,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gDAAgD,EAAE,EAAI,CAAC,KAAK,+CAA+C,EAAE,EAAI,CAAC,KAAK,wCAAwC,EAAE,EAAI,CAAC,KAAK,mCAAmC,SAAS,CAAC,CAAC,QAAQ,YAAY,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,gDAAgD,CAAC,EAAE,IAAI,mCAAmB,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,8CAA8C,CAAC,EAAE,KAAK,8BAA8B,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,6BAAc,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,cAAA,KAAe,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,KAAK,sBAAsB,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,MAAM,WAAA,aAAA,KAAc,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,cAAA,KAAe,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,KAAK,iCAAiC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,oBAAoB,CAAC,CAAC,EAAE,kBAAkB,CAAC,MAAM,WAAA,wIAAA,KAAqH,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,0CAA0C,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,0CAA0C,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,8BAAe,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,iBAAiB,EAAE,CAAC,QAAQ,oBAAoB,CAAC,CAAC,EAAE,aAAa,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,kJAAA,KAA6H,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,YAAY,CAAC,CAAC,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,8BAAe,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,kBAAkB,CAAC,CAAC,EAAE,gBAAgB,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,wCAAwC,CAAC,EAAE,MAAM,4IAAoG,GAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,qCAAqC,EAAE,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,KAAK,6BAA6B,EAAE,EAAI,CAAC,KAAK,iCAAiC,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,qCAAqC,EAAE,EAAI,CAAC,KAAK,gCAAgC,EAAE,EAAI,CAAC,KAAK,0CAA0C,EAAE,EAAI,CAAC,KAAK,iDAAiD,EAAE,GAAK,CAAC,KAAK,qCAAqC,EAAE,GAAK,CAAC,KAAK,4CAA4C,EAAE,GAAK,CAAC,KAAK,8BAA8B,CAAC,EAAE,MAAM,WAAA,qMAAA,KAA0K,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,MAAM,wKAAkI,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,yCAAyC,CAAC,EAAE,MAAM,WAAA,+FAAA,KAAmF,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,uCAAuC,EAAE,EAAI,CAAC,KAAK,sCAAsC,EAAE,EAAI,CAAC,KAAK,uCAAuC,EAAE,EAAI,CAAC,KAAK,wCAAwC,EAAE,EAAI,CAAC,KAAK,+CAA+C,CAAC,EAAE,MAAM,sKAAkI,EAAC,CAAC,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,gDAAA,KAA+C,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,4BAA4B,EAAE,EAAI,CAAC,KAAK,4BAA4B,CAAC,EAAE,IAAI,WAAA,+JAAA,KAA0I,EAAC,KAAK,+BAA+B,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,+BAA+B,CAAC,EAAE,MAAM,sEAAsD,EAAC,CAAC,CAAC,CAAC,EAAE,qBAAqB,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,iFAAA,KAAwE,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,IAAI,WAAA,sXAAA,KAAgU,EAAC,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,wGAAA,KAAwF,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,IAAI,WAAA,iPAAA,KAA8M,EAAC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,MAAM,WAAA,IAAA,KAAM,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6CAA6C,CAAC,EAAE,IAAI,oBAAM,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2CAA2C,CAAC,EAAE,KAAK,+BAA+B,SAAS,CAAC,CAAC,MAAM,WAAA,qJAAA,KAAkJ,EAAC,KAAK,mCAAmC,EAAE,CAAC,MAAM,WAAA,qCAAA,KAAoC,EAAC,KAAK,yCAAyC,EAAE,CAAC,MAAM,WAAA,iBAAA,KAAe,EAAC,KAAK,2CAA2C,EAAE,CAAC,MAAM,iCAAgB,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,yCAAyC,CAAC,EAAE,IAAI,WAAA,OAAA,KAAO,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,uCAAuC,CAAC,EAAE,SAAS,CAAC,CAAC,MAAM,WAAA,cAAA,KAAe,EAAC,KAAK,oDAAoD,CAAC,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,MAAM,mEAA6C,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,mDAAA,KAA6C,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,IAAI,WAAA,MAAA,KAAO,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,+DAA0C,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,oCAAoC,CAAC,EAAE,IAAI,WAAA,SAAA,KAAW,EAAC,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,8EAAA,KAAqE,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,oCAAoC,CAAC,EAAE,IAAI,WAAA,uCAAA,KAAqC,EAAC,KAAK,gCAAgC,SAAS,CAAC,CAAC,QAAQ,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,sBAAsB,CAAC,EAAE,MAAM,WAAA,2HAAA,KAA8G,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,yJAAA,KAAoI,EAAC,CAAC,EAAE,cAAc,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,qCAAqC,CAAC,EAAE,MAAM,WAAA,gKAAA,KAA2I,GAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,8BAA8B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,4BAA4B,EAAE,EAAI,CAAC,KAAK,8BAA8B,CAAC,EAAE,MAAM,WAAA,2HAAA,KAAgH,EAAC,CAAC,EAAE,eAAe,CAAC,SAAS,CAAC,CAAC,QAAQ,eAAe,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,4BAAA,KAA2B,EAAC,KAAK,+BAA+B,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,8BAAA,KAA6B,EAAC,KAAK,uCAAuC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,6DAA0C,EAAC,KAAK,gCAAgC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,8BAAA,KAA6B,EAAC,KAAK,uCAAuC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,MAAM,WAAA,+CAAA,KAA4C,EAAC,KAAK,wCAAwC,EAAE,CAAC,SAAS,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,6BAA6B,EAAE,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,MAAM,4CAA2B,EAAC,KAAK,qCAAqC,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,MAAM,WAAA,iEAAA,KAAuD,EAAC,KAAK,uCAAuC,EAAE,CAAC,QAAQ,SAAS,EAAE,CAAC,MAAM,WAAA,OAAA,KAAS,EAAC,KAAK,oCAAoC,EAAE,CAAC,QAAQ,iBAAiB,EAAE,CAAC,MAAM,yBAAW,EAAC,KAAK,SAAS,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,QAAQ,kBAAkB,EAAE,CAAC,QAAQ,gBAAgB,EAAE,CAAC,QAAQ,mBAAmB,EAAE,CAAC,MAAM,WAAA,WAAA,KAAY,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,2BAA2B,EAAE,EAAI,CAAC,KAAK,+BAA+B,CAAC,EAAE,IAAI,WAAA,WAAA,KAAY,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,+BAA+B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,YAAA,KAAa,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,YAAA,KAAa,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,oCAAoC,EAAE,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,6BAA6B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,QAAQ,EAAE,CAAC,QAAQ,iBAAiB,CAAC,CAAC,EAAE,CAAC,QAAQ,gBAAgB,CAAC,CAAC,EAAE,cAAc,CAAC,MAAM,sGAAiF,EAAC,KAAK,qCAAqC,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,WAAA,wCAAA,KAAuC,EAAC,cAAc,CAAC,EAAI,CAAC,KAAK,6BAA6B,EAAE,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,IAAI,WAAA,QAAA,KAAS,EAAC,YAAY,CAAC,EAAI,CAAC,KAAK,2BAA2B,CAAC,EAAE,SAAS,CAAC,CAAC,QAAQ,OAAO,EAAE,CAAC,MAAM,WAAA,IAAA,KAAM,EAAC,KAAK,+BAA+B,CAAC,CAAC,EAAE,CAAC,MAAM,WAAA,2BAAA,KAA2B,EAAC,KAAK,6BAA6B,CAAC,CAAC,CAAC,EAAE,UAAU,iBAAiB,cAAc,OAAU,QAAQ,CAAC,IAAI,CAAC,CAAC,EAEr8vCC,EAAe,CACfF,CACA","x_google_ignoreList":[0]}
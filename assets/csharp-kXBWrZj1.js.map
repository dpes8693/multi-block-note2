{"version":3,"file":"csharp-kXBWrZj1.js","sources":["../../node_modules/.pnpm/@shikijs+langs-precompiled@3.8.1/node_modules/@shikijs/langs-precompiled/dist/csharp.mjs"],"sourcesContent":["import { EmulatedRegExp } from 'oniguruma-to-es'\n\nconst lang = Object.freeze({displayName:\"C#\",name:\"csharp\",patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#directives\"},{include:\"#declarations\"},{include:\"#script-top-level\"}],repository:{\"accessor-getter\":{patterns:[{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},contentName:\"meta.accessor.getter.cs\",end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#statement\"}]},{include:\"#accessor-getter-expression\"},{include:\"#punctuation-semicolon\"}]},\"accessor-getter-expression\":{begin:/=>/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.arrow.cs\"}},contentName:\"meta.accessor.getter.cs\",end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#ref-modifier\"},{include:\"#expression\"}]},\"accessor-setter\":{patterns:[{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},contentName:\"meta.accessor.setter.cs\",end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#statement\"}]},{begin:/=>/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.arrow.cs\"}},contentName:\"meta.accessor.setter.cs\",end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#ref-modifier\"},{include:\"#expression\"}]},{include:\"#punctuation-semicolon\"}]},\"anonymous-method-expression\":{patterns:[{begin:/((?:\\b(?:async|static)\\b\\p{space}*)*)(?:(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b|(\\()(?<tuple>(?:[^\\(\\)]|\\((?:(?:[^\\(\\)]|\\((?:(?:[^\\(\\)]|\\((?:(?:[^\\(\\)]|\\((?:(?:[^\\(\\)]|\\((?:)\\))*)\\))*)\\))*)\\))*)\\))*)(\\)))\\p{space}*(=>)/dgv,beginCaptures:{\"1\":{patterns:[{match:/async|static/dgv,name:\"storage.modifier.$0.cs\"}]},\"2\":{name:\"entity.name.variable.parameter.cs\"},\"3\":{name:\"punctuation.parenthesis.open.cs\"},\"4\":{patterns:[{include:\"#comment\"},{include:\"#explicit-anonymous-function-parameter\"},{include:\"#implicit-anonymous-function-parameter\"},{include:\"#default-argument\"},{include:\"#punctuation-comma\"}]},\"5\":{name:\"punctuation.parenthesis.close.cs\"},\"6\":{name:\"keyword.operator.arrow.cs\"}},end:/(?=[\\)\\,\\;\\}])/dgv,patterns:[{include:\"#intrusive\"},{begin:/(?=\\{)/dgv,end:/(?=[\\)\\,\\;\\}])/dgv,patterns:[{include:\"#block\"},{include:\"#intrusive\"}]},{begin:/\\b(ref)\\b|(?=\\P{space})/dgv,beginCaptures:{\"1\":{name:\"storage.modifier.ref.cs\"}},end:/(?=[\\)\\,\\;\\}])/dgv,patterns:[{include:\"#expression\"}]}]},{begin:/((?:\\b(?:async|static)\\b\\p{space}*)*)\\b(delegate)\\b\\p{space}*/dgv,beginCaptures:{\"1\":{patterns:[{match:/async|static/dgv,name:\"storage.modifier.$0.cs\"}]},\"2\":{name:\"storage.type.delegate.cs\"}},end:/(?<=\\})|(?=[\\)\\,\\;\\}])/dgv,patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#intrusive\"},{include:\"#explicit-anonymous-function-parameter\"},{include:\"#punctuation-comma\"}]},{include:\"#block\"}]}]},\"anonymous-object-creation-expression\":{begin:/\\b(new)\\b\\p{space}*(?=\\{|\\/\\/|\\/\\*|(?=\\n?$))/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.new.cs\"}},end:/(?<=\\})/dgv,patterns:[{include:\"#comment\"},{include:\"#initializer-expression\"}]},argument:{patterns:[{match:/\\b(ref|in)\\b/dgv,name:\"storage.modifier.$1.cs\"},{begin:/\\b(out)\\b/dgv,beginCaptures:{\"1\":{name:\"storage.modifier.out.cs\"}},end:/(?=[\\]\\)\\,])/dgv,patterns:[{include:\"#declaration-expression-local\"},{include:\"#expression\"}]},{include:\"#expression\"}]},\"argument-list\":{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#named-argument\"},{include:\"#argument\"},{include:\"#punctuation-comma\"}]},\"array-creation-expression\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(new|stackalloc)\\\\b\\\\p{space}*(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)?\\\\p{space}*(?=\\\\[)\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9],\"transfers\":[[3,[5,8]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{name:\"keyword.operator.expression.$1.cs\"},\"2\":{patterns:[{include:\"#type\"}]}},end:/(?<=\\])/dgv,patterns:[{include:\"#bracketed-argument-list\"}]},\"as-expression\":{captures:{\"1\":{name:\"keyword.operator.expression.as.cs\"},\"2\":{patterns:[{include:\"#type\"}]}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?<!\\\\.)\\\\b(as)\\\\b\\\\p{space}*(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?(?!\\\\?))?(?:\\\\p{space}*\\\\[\\\\p{space}*(?:,\\\\p{space}*)*\\\\](?:\\\\p{space}*\\\\?(?!\\\\?))?)*)?\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9],\"transfers\":[[3,[5,8]],[4,[7]],[6,[9]]]})},\"assignment-expression\":{begin:/(?:[\\-\\%\\*\\+\\/]|\\?\\?|[\\&\\^]|<<|>>>?|\\|)?=(?![\\=\\>])/dgv,beginCaptures:{\"0\":{patterns:[{include:\"#assignment-operators\"}]}},end:/(?=[\\]\\)\\,\\;\\}])/dgv,patterns:[{include:\"#ref-modifier\"},{include:\"#expression\"}]},\"assignment-operators\":{patterns:[{match:/(?:[\\-\\%\\*\\+\\/]|\\?\\?)=/dgv,name:\"keyword.operator.assignment.compound.cs\"},{match:/(?:[\\&\\^]|<<|>>>?|\\|)=/dgv,name:\"keyword.operator.assignment.compound.bitwise.cs\"},{match:/=/dgv,name:\"keyword.operator.assignment.cs\"}]},attribute:{patterns:[{include:\"#type-name\"},{include:\"#type-arguments\"},{include:\"#attribute-arguments\"}]},\"attribute-arguments\":{begin:/(\\()/dgv,beginCaptures:{\"1\":{name:\"punctuation.parenthesis.open.cs\"}},end:/(\\))/dgv,endCaptures:{\"1\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#attribute-named-argument\"},{include:\"#expression\"},{include:\"#punctuation-comma\"}]},\"attribute-named-argument\":{begin:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(?==)/dgv,beginCaptures:{\"1\":{name:\"entity.name.variable.property.cs\"}},end:/(?=([\\)\\,]))/dgv,patterns:[{include:\"#operator-assignment\"},{include:\"#expression\"}]},\"attribute-section\":{begin:/(\\[)(assembly|module|field|event|method|param|property|return|type)?(:)?/dgv,beginCaptures:{\"1\":{name:\"punctuation.squarebracket.open.cs\"},\"2\":{name:\"keyword.other.attribute-specifier.cs\"},\"3\":{name:\"punctuation.separator.colon.cs\"}},end:/(\\])/dgv,endCaptures:{\"1\":{name:\"punctuation.squarebracket.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#attribute\"},{include:\"#punctuation-comma\"}]},\"await-expression\":{match:/(?<!\\.\\p{space}*)\\b(await)\\b/dgv,name:\"keyword.operator.expression.await.cs\"},\"await-statement\":{begin:/(?<!\\.\\p{space}*)\\b(await)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.await.cs\"}},end:/(?<=\\})|(?=[\\;\\}])/dgv,patterns:[{include:\"#foreach-statement\"},{include:\"#using-statement\"},{include:\"#expression\"}]},\"base-types\":{begin:/:/dgv,beginCaptures:{\"0\":{name:\"punctuation.separator.colon.cs\"}},end:/(?=\\{|where|;)/dgv,patterns:[{include:\"#type\"},{include:\"#punctuation-comma\"},{include:\"#preprocessor\"}]},block:{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#statement\"}]},\"boolean-literal\":{patterns:[{match:/(?<!\\.)\\btrue\\b/dgv,name:\"constant.language.boolean.true.cs\"},{match:/(?<!\\.)\\bfalse\\b/dgv,name:\"constant.language.boolean.false.cs\"}]},\"bracketed-argument-list\":{begin:/\\[/dgv,beginCaptures:{\"0\":{name:\"punctuation.squarebracket.open.cs\"}},end:/\\]/dgv,endCaptures:{\"0\":{name:\"punctuation.squarebracket.close.cs\"}},patterns:[{include:\"#named-argument\"},{include:\"#argument\"},{include:\"#punctuation-comma\"}]},\"bracketed-parameter-list\":{begin:/(?=(\\[))/dgv,beginCaptures:{\"1\":{name:\"punctuation.squarebracket.open.cs\"}},end:/(?=(\\]))/dgv,endCaptures:{\"1\":{name:\"punctuation.squarebracket.close.cs\"}},patterns:[{begin:/(?<=\\[)/dgv,end:/(?=\\])/dgv,patterns:[{include:\"#comment\"},{include:\"#attribute-section\"},{include:\"#parameter\"},{include:\"#punctuation-comma\"},{include:\"#variable-initializer\"}]}]},\"break-or-continue-statement\":{match:/(?<!\\.)\\b(break|continue)\\b/dgv,name:\"keyword.control.flow.$1.cs\"},\"case-guard\":{patterns:[{include:\"#parenthesized-expression\"},{include:\"#expression\"}]},\"cast-expression\":{captures:{\"1\":{name:\"punctuation.parenthesis.open.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"punctuation.parenthesis.close.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(\\\\()\\\\p{space}*(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*(\\\\))(?=\\\\p{space}*-*!*@?[\\\\(_\\\\p{Alpha}\\\\p{Nd}])\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9],\"transfers\":[[3,[5,8]],[4,[7]],[6,[9]]]})},\"casted-constant-pattern\":{begin:/(\\()([\\.\\:\\@_\\p{space}\\p{Alpha}\\p{Nd}]+)(\\))(?=[\\-\\!\\+\\~\\p{space}]*@?[\"'\\(_\\p{Alpha}\\p{Nd}]+)/dgv,beginCaptures:{\"1\":{name:\"punctuation.parenthesis.open.cs\"},\"2\":{patterns:[{include:\"#type-builtin\"},{include:\"#type-name\"}]},\"3\":{name:\"punctuation.parenthesis.close.cs\"}},end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#casted-constant-pattern\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#constant-pattern\"}]},{include:\"#constant-pattern\"},{captures:{\"1\":{name:\"entity.name.type.alias.cs\"},\"2\":{name:\"punctuation.separator.coloncolon.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(::)/dgv},{captures:{\"1\":{name:\"entity.name.type.cs\"},\"2\":{name:\"punctuation.accessor.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(\\.)/dgv},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"variable.other.constant.cs\"}]},\"catch-clause\":{begin:/(?<!\\.)\\b(catch)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.exception.catch.cs\"}},end:/(?<=\\})/dgv,patterns:[{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{captures:{\"1\":{patterns:[{include:\"#type\"}]},\"6\":{name:\"entity.name.variable.local.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*(?:((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b)?\",\"dgv\",{\"hiddenCaptures\":[4,6,7,8,11],\"transfers\":[[2,[4,7,11]],[3,[6]],[5,[8]]]})}]},{include:\"#when-clause\"},{include:\"#comment\"},{include:\"#block\"}]},\"char-character-escape\":{match:/\\\\(x\\p{AHex}{1,4}|u\\p{AHex}{4}|[^\\n])/dgv,name:\"constant.character.escape.cs\"},\"char-literal\":{begin:/'/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.char.begin.cs\"}},end:/(')|([^\\n\\\\])(?=\\n?$)/dgv,endCaptures:{\"1\":{name:\"punctuation.definition.char.end.cs\"},\"2\":{name:\"invalid.illegal.newline.cs\"}},name:\"string.quoted.single.cs\",patterns:[{include:\"#char-character-escape\"}]},\"class-declaration\":{begin:/(?=(\\brecord\\b\\p{space}+)?\\bclass\\b)/dgv,end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/(\\b(record)\\b\\p{space}+)?\\b(class)\\b\\p{space}+(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*/dgv,beginCaptures:{\"2\":{name:\"storage.type.record.cs\"},\"3\":{name:\"storage.type.class.cs\"},\"4\":{name:\"entity.name.type.class.cs\"}},end:/(?=\\{)|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#type-parameter-list\"},{include:\"#parenthesized-parameter-list\"},{include:\"#base-types\"},{include:\"#generic-constraints\"}]},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#class-or-struct-members\"}]},{include:\"#preprocessor\"},{include:\"#comment\"}]},\"class-or-struct-members\":{patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#storage-modifier\"},{include:\"#type-declarations\"},{include:\"#property-declaration\"},{include:\"#field-declaration\"},{include:\"#event-declaration\"},{include:\"#indexer-declaration\"},{include:\"#variable-initializer\"},{include:\"#constructor-declaration\"},{include:\"#destructor-declaration\"},{include:\"#operator-declaration\"},{include:\"#conversion-operator-declaration\"},{include:\"#method-declaration\"},{include:\"#attribute-section\"},{include:\"#punctuation-semicolon\"}]},\"combinator-pattern\":{match:/\\b(and|or|not)\\b/dgv,name:\"keyword.operator.expression.pattern.combinator.$1.cs\"},comment:{patterns:[{begin:/(^\\p{space}+)?(\\/\\/\\/)(?!\\/)/dgv,captures:{\"1\":{name:\"punctuation.whitespace.comment.leading.cs\"},\"2\":{name:\"punctuation.definition.comment.cs\"}},name:\"comment.block.documentation.cs\",patterns:[{include:\"#xml-doc-comment\"}],while:/^(\\p{space}*)(\\/\\/\\/)(?!\\/)/dgv},{begin:/(^\\p{space}+)?(\\/\\*\\*)(?!\\/)/dgv,captures:{\"1\":{name:\"punctuation.whitespace.comment.leading.cs\"},\"2\":{name:\"punctuation.definition.comment.cs\"}},end:/(^\\p{space}+)?(\\*\\/)/dgv,name:\"comment.block.documentation.cs\",patterns:[{begin:/(?=(?:(?!\\*\\/)\\p{Any})*(?=\\n?$))/dgvy,patterns:[{include:\"#xml-doc-comment\"}],while:/*@__PURE__*/ new EmulatedRegExp(\"^((?:(?=(\\\\p{space}*))\\\\2))(\\\\*(?!/))?(?=(?:(?!\\\\*/)\\\\p{Any})*(?=\\\\n?$))\",\"dgv\",{\"hiddenCaptures\":[2]}),whileCaptures:{\"1\":{name:\"punctuation.whitespace.comment.leading.cs\"},\"2\":{name:\"punctuation.definition.comment.cs\"}}},{include:\"#xml-doc-comment\"}]},{begin:/(^\\p{space}+)?(\\/\\/)[^\\n]*(?=\\n?$)/dgv,captures:{\"1\":{name:\"punctuation.whitespace.comment.leading.cs\"},\"2\":{name:\"punctuation.definition.comment.cs\"}},name:\"comment.line.double-slash.cs\",while:/^(\\p{space}*)(\\/\\/)[^\\n]*(?=\\n?$)/dgv},{begin:/\\/\\*/dgv,captures:{\"0\":{name:\"punctuation.definition.comment.cs\"}},end:/\\*\\//dgv,name:\"comment.block.cs\"}]},\"conditional-operator\":{patterns:[{match:/\\?(?!\\?|\\p{space}*[\\.\\[])/dgv,name:\"keyword.operator.conditional.question-mark.cs\"},{match:/:/dgv,name:\"keyword.operator.conditional.colon.cs\"}]},\"constant-pattern\":{patterns:[{include:\"#boolean-literal\"},{include:\"#null-literal\"},{include:\"#numeric-literal\"},{include:\"#char-literal\"},{include:\"#string-literal\"},{include:\"#raw-string-literal\"},{include:\"#verbatim-string-literal\"},{include:\"#type-operator-expression\"},{include:\"#expression-operator-expression\"},{include:\"#expression-operators\"},{include:\"#casted-constant-pattern\"}]},\"constructor-declaration\":{begin:/(?=@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*\\p{space}*\\()/dgv,end:/(?<=\\})|(?=;)/dgv,patterns:[{captures:{\"1\":{name:\"entity.name.function.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b/dgv},{begin:/(:)/dgv,beginCaptures:{\"1\":{name:\"punctuation.separator.colon.cs\"}},end:/(?=\\{|=>)/dgv,patterns:[{include:\"#constructor-initializer\"}]},{include:\"#parenthesized-parameter-list\"},{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#expression-body\"},{include:\"#block\"}]},\"constructor-initializer\":{begin:/\\b(base|this)\\b\\p{space}*(?=\\()/dgv,beginCaptures:{\"1\":{name:\"variable.language.$1.cs\"}},end:/(?<=\\))/dgv,patterns:[{include:\"#argument-list\"}]},\"context-control-paren-statement\":{patterns:[{include:\"#fixed-statement\"},{include:\"#lock-statement\"},{include:\"#using-statement\"}]},\"context-control-statement\":{match:/\\b(checked|unchecked|unsafe)\\b(?!\\p{space}*[\\(\\@_\\p{Alpha}])/dgv,name:\"keyword.control.context.$1.cs\"},\"conversion-operator-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(?<explicit_or_implicit_keyword>(?:ex|im)plicit)\\\\p{space}*\\\\b(?<operator_keyword>operator)\\\\p{space}*(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*(?=\\\\()\",\"dgv\",{\"hiddenCaptures\":[6,8,9,10],\"transfers\":[[4,[6,9]],[5,[8]],[7,[10]]]}),beginCaptures:{\"1\":{patterns:[{captures:{\"1\":{name:\"storage.modifier.explicit.cs\"}},match:/\\b(explicit)\\b/dgv},{captures:{\"1\":{name:\"storage.modifier.implicit.cs\"}},match:/\\b(implicit)\\b/dgv}]},\"2\":{name:\"storage.type.operator.cs\"},\"3\":{patterns:[{include:\"#type\"}]}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#parenthesized-parameter-list\"},{include:\"#expression-body\"},{include:\"#block\"}]},\"declaration-expression-local\":{captures:{\"1\":{name:\"storage.type.var.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.local.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?:\\\\b(var)\\\\b|(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*))\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b\\\\p{space}*(?=[\\\\]\\\\)\\\\,])\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]})},\"declaration-expression-tuple\":{captures:{\"1\":{name:\"storage.type.var.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.tuple-element.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?:\\\\b(var)\\\\b|(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*))\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b\\\\p{space}*(?=[\\\\)\\\\,])\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]})},declarations:{patterns:[{include:\"#namespace-declaration\"},{include:\"#type-declarations\"},{include:\"#punctuation-semicolon\"}]},\"default-argument\":{begin:/=/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.assignment.cs\"}},end:/(?=[\\)\\,])/dgv,patterns:[{include:\"#expression\"}]},\"default-literal-expression\":{captures:{\"1\":{name:\"keyword.operator.expression.default.cs\"}},match:/\\b(default)\\b/dgv},\"delegate-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(delegate)\\\\b\\\\p{space}+(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(<([^\\\\<\\\\>]+)>)?\\\\p{space}*(?=\\\\()\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{name:\"storage.type.delegate.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.type.delegate.cs\"},\"8\":{patterns:[{include:\"#type-parameter-list\"}]}},end:/(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#parenthesized-parameter-list\"},{include:\"#generic-constraints\"}]},\"designation-pattern\":{patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#punctuation-comma\"},{include:\"#designation-pattern\"}]},{include:\"#simple-designation-pattern\"}]},\"destructor-declaration\":{begin:/(~)(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(?=\\()/dgv,beginCaptures:{\"1\":{name:\"punctuation.tilde.cs\"},\"2\":{name:\"entity.name.function.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#parenthesized-parameter-list\"},{include:\"#expression-body\"},{include:\"#block\"}]},directives:{patterns:[{include:\"#extern-alias-directive\"},{include:\"#using-directive\"},{include:\"#attribute-section\"},{include:\"#punctuation-semicolon\"}]},\"discard-pattern\":{match:/_(?![_\\p{Alpha}\\p{Nd}])/dgv,name:\"variable.language.discard.cs\"},\"do-statement\":{begin:/(?<!\\.)\\b(do)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.loop.do.cs\"}},end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#statement\"}]},\"double-raw-interpolation\":{begin:/(?<=[^\\{][^\\{]|^)(\\{*)(\\{\\{)(?=[^\\{])/dgv,beginCaptures:{\"1\":{name:\"string.quoted.double.cs\"},\"2\":{name:\"punctuation.definition.interpolation.begin.cs\"}},end:/\\}\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.interpolation.end.cs\"}},name:\"meta.interpolation.cs\",patterns:[{include:\"#expression\"}]},\"element-access-expression\":{begin:/(?:(?:(\\?)\\p{space}*)?(\\.)\\p{space}*|(->)\\p{space}*)?(?:(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*)?(?:(\\?)\\p{space}*)?(?=\\[)/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.null-conditional.cs\"},\"2\":{name:\"punctuation.accessor.cs\"},\"3\":{name:\"punctuation.accessor.pointer.cs\"},\"4\":{name:\"variable.other.object.property.cs\"},\"5\":{name:\"keyword.operator.null-conditional.cs\"}},end:/(?<=\\])(?!\\p{space}*\\[)/dgv,patterns:[{include:\"#bracketed-argument-list\"}]},\"else-part\":{begin:/(?<!\\.)\\b(else)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.else.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#statement\"}]},\"enum-declaration\":{begin:/(?=\\benum\\b)/dgv,end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/(?=enum)/dgv,end:/(?=\\{)|(?=;)/dgv,patterns:[{include:\"#comment\"},{captures:{\"1\":{name:\"storage.type.enum.cs\"},\"2\":{name:\"entity.name.type.enum.cs\"}},match:/(enum)\\p{space}+(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv},{begin:/:/dgv,beginCaptures:{\"0\":{name:\"punctuation.separator.colon.cs\"}},end:/(?=\\{)/dgv,patterns:[{include:\"#type\"}]}]},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#attribute-section\"},{include:\"#punctuation-comma\"},{begin:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,beginCaptures:{\"0\":{name:\"entity.name.variable.enum-member.cs\"}},end:/(?=([\\,\\}]))/dgv,patterns:[{include:\"#comment\"},{include:\"#variable-initializer\"}]}]},{include:\"#preprocessor\"},{include:\"#comment\"}]},\"event-accessors\":{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#attribute-section\"},{begin:/\\b(add|remove)\\b\\p{space}*(?=[\\;\\{]|=>|\\/\\/|\\/\\*|(?=\\n?$))/dgv,beginCaptures:{\"1\":{name:\"storage.type.accessor.$1.cs\"}},end:/(?<=[\\;\\}])|(?=\\})/dgv,patterns:[{include:\"#accessor-setter\"}]}]},\"event-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(event)\\\\b\\\\p{space}*(?<return_type>(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+)(?<interface_name>((?:(?:(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*\\\\.\\\\p{space}*)?((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(?=[\\\\,\\\\;\\\\=\\\\{]|//|/\\\\*|(?=\\\\n?$))\",\"dgv\",{\"hiddenCaptures\":[6,8,9,10,13,14,15,16,17,18,19,20,21,23],\"transfers\":[[4,[6,9,14,16,19,23]],[5,[8,15,18]],[7,[10,17,20]],[3,[13]],[11,[21]]]}),beginCaptures:{\"1\":{name:\"storage.type.event.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"8\":{patterns:[{include:\"#type\"},{include:\"#punctuation-accessor\"}]},\"9\":{name:\"entity.name.variable.event.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#event-accessors\"},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.variable.event.cs\"},{include:\"#punctuation-comma\"},{begin:/=/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.assignment.cs\"}},end:/(?<=,)|(?=;)/dgv,patterns:[{include:\"#expression\"},{include:\"#punctuation-comma\"}]}]},\"explicit-anonymous-function-parameter\":{captures:{\"1\":{name:\"storage.modifier.$1.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.parameter.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?:\\\\b(ref|params|out|in)\\\\b\\\\p{space}*)?(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args><(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:))*>\\\\p{space}*))*>\\\\p{space}*))*>\\\\p{space}*))*>\\\\p{space}*))*>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:<(?:[^\\\\<\\\\>]|(?:))*>\\\\p{space}*))*>\\\\p{space}*))*>\\\\p{space}*))*>\\\\p{space}*))*>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))*\\\\)))*\\\\)))*\\\\)))*\\\\)))*\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*\\\\b((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]})},expression:{patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#expression-operator-expression\"},{include:\"#type-operator-expression\"},{include:\"#default-literal-expression\"},{include:\"#throw-expression\"},{include:\"#raw-interpolated-string\"},{include:\"#interpolated-string\"},{include:\"#verbatim-interpolated-string\"},{include:\"#type-builtin\"},{include:\"#language-variable\"},{include:\"#switch-statement-or-expression\"},{include:\"#with-expression\"},{include:\"#conditional-operator\"},{include:\"#assignment-expression\"},{include:\"#expression-operators\"},{include:\"#await-expression\"},{include:\"#query-expression\"},{include:\"#as-expression\"},{include:\"#is-expression\"},{include:\"#anonymous-method-expression\"},{include:\"#object-creation-expression\"},{include:\"#array-creation-expression\"},{include:\"#anonymous-object-creation-expression\"},{include:\"#invocation-expression\"},{include:\"#member-access-expression\"},{include:\"#element-access-expression\"},{include:\"#cast-expression\"},{include:\"#literal\"},{include:\"#parenthesized-expression\"},{include:\"#tuple-deconstruction-assignment\"},{include:\"#initializer-expression\"},{include:\"#identifier\"}]},\"expression-body\":{begin:/=>/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.arrow.cs\"}},end:/(?=[\\)\\,\\;\\}])/dgv,patterns:[{include:\"#ref-modifier\"},{include:\"#expression\"}]},\"expression-operator-expression\":{begin:/\\b(checked|unchecked|nameof)\\p{space}*(\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.$1.cs\"},\"2\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#expression\"}]},\"expression-operators\":{patterns:[{match:/<<|>>>?/dgv,name:\"keyword.operator.bitwise.shift.cs\"},{match:/[\\!\\=]=/dgv,name:\"keyword.operator.comparison.cs\"},{match:/<=|>=|[\\<\\>]/dgv,name:\"keyword.operator.relational.cs\"},{match:/!|&&|\\|\\|/dgv,name:\"keyword.operator.logical.cs\"},{match:/[\\&\\^\\|\\~]/dgv,name:\"keyword.operator.bitwise.cs\"},{match:/--/dgv,name:\"keyword.operator.decrement.cs\"},{match:/\\+\\+/dgv,name:\"keyword.operator.increment.cs\"},{match:/\\+|-(?!>)|[\\%\\*\\/]/dgv,name:\"keyword.operator.arithmetic.cs\"},{match:/\\?\\?/dgv,name:\"keyword.operator.null-coalescing.cs\"},{match:/\\.\\./dgv,name:\"keyword.operator.range.cs\"}]},\"extern-alias-directive\":{begin:/\\b(extern)\\p{space}+(alias)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.other.directive.extern.cs\"},\"2\":{name:\"keyword.other.directive.alias.cs\"}},end:/(?=;)/dgv,patterns:[{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"variable.other.alias.cs\"}]},\"field-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(?!=[\\\\=\\\\>])(?=[\\\\,\\\\;\\\\=]|(?=\\\\n?$))\",\"dgv\",{\"hiddenCaptures\":[4,6,7,8,11],\"transfers\":[[2,[4,7,11]],[3,[6]],[5,[8]]]}),beginCaptures:{\"1\":{patterns:[{include:\"#type\"}]},\"6\":{name:\"entity.name.variable.field.cs\"}},end:/(?=;)/dgv,patterns:[{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.variable.field.cs\"},{include:\"#punctuation-comma\"},{include:\"#comment\"},{include:\"#variable-initializer\"},{include:\"#class-or-struct-members\"}]},\"finally-clause\":{begin:/(?<!\\.)\\b(finally)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.exception.finally.cs\"}},end:/(?<=\\})/dgv,patterns:[{include:\"#comment\"},{include:\"#block\"}]},\"fixed-statement\":{begin:/\\b(fixed)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.context.fixed.cs\"}},end:/(?<=\\))|(?=[\\;\\}])/dgv,patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#intrusive\"},{include:\"#local-variable-declaration\"}]}]},\"for-statement\":{begin:/\\b(for)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.loop.for.cs\"}},end:/(?<=\\))|(?=[\\;\\}])/dgv,patterns:[{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{begin:/(?=[^\\)\\;])/dgv,end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#intrusive\"},{include:\"#local-variable-declaration\"}]},{begin:/(?=;)/dgv,end:/(?=\\))/dgv,patterns:[{include:\"#intrusive\"},{include:\"#expression\"},{include:\"#punctuation-comma\"},{include:\"#punctuation-semicolon\"}]}]}]},\"foreach-statement\":{begin:/\\b(foreach)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.loop.foreach.cs\"}},end:/(?<=\\))|(?=[\\;\\}])/dgv,patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#intrusive\"},{captures:{\"1\":{name:\"storage.modifier.ref.cs\"},\"2\":{name:\"storage.type.var.cs\"},\"3\":{patterns:[{include:\"#type\"}]},\"8\":{name:\"entity.name.variable.local.cs\"},\"9\":{name:\"keyword.control.loop.in.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?:(?:\\\\b(ref)\\\\p{space}+)?\\\\b(var)\\\\b|(?<type_name>(?:ref\\\\p{space}+)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*))\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}+\\\\b(in)\\\\b\",\"dgv\",{\"hiddenCaptures\":[6,8,9,10,13],\"transfers\":[[4,[6,9,13]],[5,[8]],[7,[10]]]})},{captures:{\"1\":{name:\"storage.type.var.cs\"},\"2\":{patterns:[{include:\"#tuple-declaration-deconstruction-element-list\"}]},\"3\":{name:\"keyword.control.loop.in.cs\"}},match:/(?:\\b(var)\\b\\p{space}*)?(?<tuple>\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:))+\\)))+\\)))+\\)))+\\)))+\\))\\p{space}+\\b(in)\\b/dgv},{include:\"#expression\"}]}]},\"generic-constraints\":{begin:/(where)\\p{space}+(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(:)/dgv,beginCaptures:{\"1\":{name:\"storage.modifier.where.cs\"},\"2\":{name:\"entity.name.type.type-parameter.cs\"},\"3\":{name:\"punctuation.separator.colon.cs\"}},end:/(?=\\{|where|;|=>)/dgv,patterns:[{match:/\\bclass\\b/dgv,name:\"storage.type.class.cs\"},{match:/\\bstruct\\b/dgv,name:\"storage.type.struct.cs\"},{match:/\\bdefault\\b/dgv,name:\"keyword.other.constraint.default.cs\"},{match:/\\bnotnull\\b/dgv,name:\"keyword.other.constraint.notnull.cs\"},{match:/\\bunmanaged\\b/dgv,name:\"keyword.other.constraint.unmanaged.cs\"},{captures:{\"1\":{name:\"keyword.operator.expression.new.cs\"},\"2\":{name:\"punctuation.parenthesis.open.cs\"},\"3\":{name:\"punctuation.parenthesis.close.cs\"}},match:/(new)\\p{space}*(\\()\\p{space}*(\\))/dgv},{include:\"#type\"},{include:\"#punctuation-comma\"},{include:\"#generic-constraints\"}]},\"goto-statement\":{begin:/(?<!\\.)\\b(goto)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.flow.goto.cs\"}},end:/(?=[\\;\\}])/dgv,patterns:[{begin:/\\b(case)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.case.cs\"}},end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#expression\"}]},{captures:{\"1\":{name:\"keyword.control.conditional.default.cs\"}},match:/\\b(default)\\b/dgv},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.label.cs\"}]},\"group-by\":{captures:{\"1\":{name:\"keyword.operator.expression.query.by.cs\"}},match:/\\b(by)\\b\\p{space}*/dgv},\"group-clause\":{begin:/\\b(group)\\b\\p{space}*/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.group.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#group-by\"},{include:\"#group-into\"},{include:\"#query-body\"},{include:\"#expression\"}]},\"group-into\":{captures:{\"1\":{name:\"keyword.operator.expression.query.into.cs\"},\"2\":{name:\"entity.name.variable.range-variable.cs\"}},match:/\\b(into)\\b\\p{space}*(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b\\p{space}*/dgv},identifier:{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"variable.other.readwrite.cs\"},\"if-statement\":{begin:/(?<!\\.)\\b(if)\\b\\p{space}*(?=\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.if.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#expression\"}]},{include:\"#statement\"}]},\"implicit-anonymous-function-parameter\":{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*\\b/dgv,name:\"entity.name.variable.parameter.cs\"},\"indexer-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(?<return_type>(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+)(?<interface_name>((?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*\\\\.\\\\p{space}*)?(?<indexer_name>this)\\\\p{space}*(?=\\\\[)\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12,13,14,15,16,17,18,19,20],\"transfers\":[[3,[5,8,13,15,18]],[4,[7,14,17]],[6,[9,16,19]],[2,[12]],[10,[20]]]}),beginCaptures:{\"1\":{patterns:[{include:\"#type\"}]},\"7\":{patterns:[{include:\"#type\"},{include:\"#punctuation-accessor\"}]},\"8\":{name:\"variable.language.this.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#bracketed-parameter-list\"},{include:\"#property-accessors\"},{include:\"#accessor-getter-expression\"},{include:\"#variable-initializer\"}]},\"initializer-expression\":{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#expression\"},{include:\"#punctuation-comma\"}]},\"interface-declaration\":{begin:/(?=\\binterface\\b)/dgv,end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/(interface)\\b\\p{space}+(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv,beginCaptures:{\"1\":{name:\"storage.type.interface.cs\"},\"2\":{name:\"entity.name.type.interface.cs\"}},end:/(?=\\{)|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#type-parameter-list\"},{include:\"#base-types\"},{include:\"#generic-constraints\"}]},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#interface-members\"}]},{include:\"#preprocessor\"},{include:\"#comment\"}]},\"interface-members\":{patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#storage-modifier\"},{include:\"#property-declaration\"},{include:\"#event-declaration\"},{include:\"#indexer-declaration\"},{include:\"#method-declaration\"},{include:\"#operator-declaration\"},{include:\"#attribute-section\"},{include:\"#punctuation-semicolon\"}]},\"interpolated-string\":{begin:/\\$\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/(\")|([^\\n\\\\])(?=\\n?$)/dgv,endCaptures:{\"1\":{name:\"punctuation.definition.string.end.cs\"},\"2\":{name:\"invalid.illegal.newline.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#string-character-escape\"},{include:\"#interpolation\"}]},interpolation:{begin:/(?<=[^\\{]|^)((?:\\{\\{)*)(\\{)(?=[^\\{])/dgv,beginCaptures:{\"1\":{name:\"string.quoted.double.cs\"},\"2\":{name:\"punctuation.definition.interpolation.begin.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.interpolation.end.cs\"}},name:\"meta.interpolation.cs\",patterns:[{include:\"#expression\"}]},intrusive:{patterns:[{include:\"#preprocessor\"},{include:\"#comment\"}]},\"invocation-expression\":{begin:/(?:(?:(\\?)\\p{space}*)?(\\.)\\p{space}*|(->)\\p{space}*)?(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(<(?<type_args>[^\\(\\)\\<\\>]|\\((?:[^\\(\\)\\<\\>]|<[^\\(\\)\\<\\>]*>|\\([^\\(\\)\\<\\>]*\\))*\\)|<(?:[^\\(\\)\\<\\>]|\\((?:[^\\(\\)\\<\\>]|<[^\\(\\)\\<\\>]*>|\\([^\\(\\)\\<\\>]*\\))*\\)|<(?:[^\\(\\)\\<\\>]|\\((?:[^\\(\\)\\<\\>]|<[^\\(\\)\\<\\>]*>|\\([^\\(\\)\\<\\>]*\\))*\\)|<(?:[^\\(\\)\\<\\>]|\\((?:[^\\(\\)\\<\\>]|<[^\\(\\)\\<\\>]*>|\\([^\\(\\)\\<\\>]*\\))*\\)|<(?:[^\\(\\)\\<\\>]|\\((?:[^\\(\\)\\<\\>]|<[^\\(\\)\\<\\>]*>|\\([^\\(\\)\\<\\>]*\\))*\\)|<(?:)*>)*>)*>)*>)*>)*>\\p{space}*)?(?=\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.null-conditional.cs\"},\"2\":{name:\"punctuation.accessor.cs\"},\"3\":{name:\"punctuation.accessor.pointer.cs\"},\"4\":{name:\"entity.name.function.cs\"},\"5\":{patterns:[{include:\"#type-arguments\"}]}},end:/(?<=\\))/dgv,patterns:[{include:\"#argument-list\"}]},\"is-expression\":{begin:/(?<!\\.)\\b(is)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.pattern.is.cs\"}},end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=)/dgv,patterns:[{include:\"#pattern\"}]},\"join-clause\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(join)\\\\b\\\\p{space}*(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)?\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b\\\\p{space}*\\\\b(in)\\\\b\\\\p{space}*\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.join.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.range-variable.cs\"},\"8\":{name:\"keyword.operator.expression.query.in.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#join-on\"},{include:\"#join-equals\"},{include:\"#join-into\"},{include:\"#query-body\"},{include:\"#expression\"}]},\"join-equals\":{captures:{\"1\":{name:\"keyword.operator.expression.query.equals.cs\"}},match:/\\b(equals)\\b\\p{space}*/dgv},\"join-into\":{captures:{\"1\":{name:\"keyword.operator.expression.query.into.cs\"},\"2\":{name:\"entity.name.variable.range-variable.cs\"}},match:/\\b(into)\\b\\p{space}*(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b\\p{space}*/dgv},\"join-on\":{captures:{\"1\":{name:\"keyword.operator.expression.query.on.cs\"}},match:/\\b(on)\\b\\p{space}*/dgv},\"labeled-statement\":{captures:{\"1\":{name:\"entity.name.label.cs\"},\"2\":{name:\"punctuation.separator.colon.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(:)/dgv},\"language-variable\":{patterns:[{match:/\\b(base|this)\\b/dgv,name:\"variable.language.$1.cs\"},{match:/\\b(value)\\b/dgv,name:\"variable.other.$1.cs\"}]},\"let-clause\":{begin:/\\b(let)\\b\\p{space}*(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b\\p{space}*(=)\\p{space}*/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.let.cs\"},\"2\":{name:\"entity.name.variable.range-variable.cs\"},\"3\":{name:\"keyword.operator.assignment.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#query-body\"},{include:\"#expression\"}]},\"list-pattern\":{begin:/(?=\\[)/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{begin:/\\[/dgv,beginCaptures:{\"0\":{name:\"punctuation.squarebracket.open.cs\"}},end:/\\]/dgv,endCaptures:{\"0\":{name:\"punctuation.squarebracket.close.cs\"}},patterns:[{include:\"#pattern\"},{include:\"#punctuation-comma\"}]},{begin:/(?<=\\])/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#intrusive\"},{include:\"#simple-designation-pattern\"}]}]},literal:{patterns:[{include:\"#boolean-literal\"},{include:\"#null-literal\"},{include:\"#numeric-literal\"},{include:\"#char-literal\"},{include:\"#raw-string-literal\"},{include:\"#string-literal\"},{include:\"#verbatim-string-literal\"},{include:\"#tuple-literal\"}]},\"local-constant-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(?<const_keyword>const)\\\\b\\\\p{space}*(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(?=[\\\\,\\\\;\\\\=])\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{name:\"storage.modifier.const.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.local.cs\"}},end:/(?=;)/dgv,patterns:[{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.variable.local.cs\"},{include:\"#punctuation-comma\"},{include:\"#comment\"},{include:\"#variable-initializer\"}]},\"local-declaration\":{patterns:[{include:\"#local-constant-declaration\"},{include:\"#local-variable-declaration\"},{include:\"#local-function-declaration\"},{include:\"#local-tuple-var-deconstruction\"}]},\"local-function-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b((?:(?:async|unsafe|static|extern)\\\\p{space}+)*)(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?)?(?:\\\\p{space}*\\\\[\\\\p{space}*(?:,\\\\p{space}*)*\\\\](?:\\\\p{space}*\\\\?)?)*)\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(<[^\\\\<\\\\>]+>)?\\\\p{space}*(?=\\\\()\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{patterns:[{include:\"#storage-modifier\"}]},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.function.cs\"},\"8\":{patterns:[{include:\"#type-parameter-list\"}]}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#parenthesized-parameter-list\"},{include:\"#generic-constraints\"},{include:\"#expression-body\"},{include:\"#block\"}]},\"local-tuple-var-deconstruction\":{begin:/\\b(var)\\b\\p{space}*(?<tuple>\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:\\((?:[^\\(\\)]|(?:))+\\)))+\\)))+\\)))+\\)))+\\))\\p{space}*(?=[\\)\\;\\=])/dgv,beginCaptures:{\"1\":{name:\"storage.type.var.cs\"},\"2\":{patterns:[{include:\"#tuple-declaration-deconstruction-element-list\"}]}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#comment\"},{include:\"#variable-initializer\"}]},\"local-variable-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(?:(?:\\\\b(ref)\\\\p{space}+(?:\\\\b(readonly)\\\\p{space}+)?)?\\\\b(var)\\\\b|(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*[\\\\*\\\\?]\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*))\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(?!=>)(?=[\\\\)\\\\,\\\\;\\\\=])\",\"dgv\",{\"hiddenCaptures\":[7,9,10,11,14],\"transfers\":[[5,[7,10,14]],[6,[9]],[8,[11]]]}),beginCaptures:{\"1\":{name:\"storage.modifier.ref.cs\"},\"2\":{name:\"storage.modifier.readonly.cs\"},\"3\":{name:\"storage.type.var.cs\"},\"4\":{patterns:[{include:\"#type\"}]},\"9\":{name:\"entity.name.variable.local.cs\"}},end:/(?=[\\)\\;\\}])/dgv,patterns:[{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.variable.local.cs\"},{include:\"#punctuation-comma\"},{include:\"#comment\"},{include:\"#variable-initializer\"}]},\"lock-statement\":{begin:/\\b(lock)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.context.lock.cs\"}},end:/(?<=\\))|(?=[\\;\\}])/dgv,patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#intrusive\"},{include:\"#expression\"}]}]},\"member-access-expression\":{patterns:[{captures:{\"1\":{name:\"keyword.operator.null-conditional.cs\"},\"2\":{name:\"punctuation.accessor.cs\"},\"3\":{name:\"punctuation.accessor.pointer.cs\"},\"4\":{name:\"variable.other.object.property.cs\"}},match:/(?:(?:(\\?)\\p{space}*)?(\\.)\\p{space}*|(->)\\p{space}*)(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(?![\\(_\\p{Alpha}\\p{Nd}]|(\\?)?\\[|<)/dgv},{captures:{\"1\":{name:\"punctuation.accessor.cs\"},\"2\":{name:\"variable.other.object.cs\"},\"3\":{patterns:[{include:\"#type-arguments\"}]}},match:/*@__PURE__*/ new EmulatedRegExp(\"(\\\\.)?\\\\p{space}*(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)(?<type_params>\\\\p{space}*<([^\\\\<\\\\>]|(?:\\\\p{space}*<([^\\\\<\\\\>]|(?:\\\\p{space}*<([^\\\\<\\\\>]|(?:\\\\p{space}*<([^\\\\<\\\\>]|(?:\\\\p{space}*<([^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)(?=(\\\\p{space}*\\\\?)?\\\\p{space}*\\\\.\\\\p{space}*@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\",\"dgv\",{\"hiddenCaptures\":[5,6,7,8]})},{captures:{\"1\":{name:\"variable.other.object.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)(?=\\p{space}*(?:(?:\\?\\p{space}*)?\\.|->)\\p{space}*@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv}]},\"method-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(?<return_type>(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+)(?<interface_name>((?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*\\\\.\\\\p{space}*)?((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(<([^\\\\<\\\\>]+)>)?\\\\p{space}*(?=\\\\()\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12,13,14,15,16,17,18,19,20,22],\"transfers\":[[3,[5,8,13,15,18,22]],[4,[7,14,17]],[6,[9,16,19]],[2,[12]],[10,[20]]]}),beginCaptures:{\"1\":{patterns:[{include:\"#type\"}]},\"7\":{patterns:[{include:\"#type\"},{include:\"#punctuation-accessor\"}]},\"8\":{name:\"entity.name.function.cs\"},\"9\":{patterns:[{include:\"#type-parameter-list\"}]}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#parenthesized-parameter-list\"},{include:\"#generic-constraints\"},{include:\"#expression-body\"},{include:\"#block\"}]},\"named-argument\":{begin:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(:)/dgv,beginCaptures:{\"1\":{name:\"entity.name.variable.parameter.cs\"},\"2\":{name:\"punctuation.separator.colon.cs\"}},end:/(?=([\\]\\)\\,]))/dgv,patterns:[{include:\"#argument\"}]},\"namespace-declaration\":{begin:/\\b(namespace)\\p{space}+/dgv,beginCaptures:{\"1\":{name:\"storage.type.namespace.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.type.namespace.cs\"},{include:\"#punctuation-accessor\"},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#declarations\"},{include:\"#using-directive\"},{include:\"#punctuation-semicolon\"}]}]},\"null-literal\":{match:/(?<!\\.)\\bnull\\b/dgv,name:\"constant.language.null.cs\"},\"numeric-literal\":{captures:{\"0\":{patterns:[{begin:/(?=[^\\n])/dgv,end:/(?=\\n?$)/dgv,patterns:[{captures:{\"2\":{name:\"constant.numeric.decimal.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"3\":{name:\"constant.numeric.other.separator.thousands.cs\"},\"4\":{name:\"constant.numeric.other.separator.decimals.cs\"},\"5\":{name:\"constant.numeric.decimal.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"6\":{name:\"constant.numeric.other.separator.thousands.cs\"},\"8\":{name:\"constant.numeric.other.exponent.cs\"},\"9\":{name:\"keyword.operator.arithmetic.cs\"},\"10\":{name:\"keyword.operator.arithmetic.cs\"},\"11\":{name:\"constant.numeric.decimal.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"12\":{name:\"constant.numeric.other.suffix.cs\"}},match:/((?=[\\.0-9])(?!0[BXbx]))([0-9](?:[0-9]|((?<=\\p{AHex})_(?=\\p{AHex})))*)?((?<=[0-9])|\\.(?=[0-9]))([0-9](?:[0-9]|((?<=\\p{AHex})_(?=\\p{AHex})))*)?((?<!_)([Ee])(\\+?)(-?)([0-9](?:[0-9]|(?<=\\p{AHex})_(?=\\p{AHex}))*))?([DFMdfm](?![\\p{L}\\p{M}\\p{N}\\p{Pc}]))?(?=\\n?$)/dgvy},{captures:{\"1\":{name:\"constant.numeric.other.preffix.binary.cs\"},\"2\":{name:\"constant.numeric.binary.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"3\":{name:\"constant.numeric.other.separator.thousands.cs\"},\"4\":{name:\"constant.numeric.other.suffix.cs\"}},match:/(0[Bb])([01_](?:[01_]|((?<=\\p{AHex})_(?=\\p{AHex})))*)((?:(?:(?:(?:(?:[Uu]|[Uu]l)|[Uu]L)|l[Uu]?)|L[Uu]?)|[DFMdfm])(?![\\p{L}\\p{M}\\p{N}\\p{Pc}]))?(?=\\n?$)/dgvy},{captures:{\"1\":{name:\"constant.numeric.other.preffix.hex.cs\"},\"2\":{name:\"constant.numeric.hex.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"3\":{name:\"constant.numeric.other.separator.thousands.cs\"},\"4\":{name:\"constant.numeric.other.suffix.cs\"}},match:/(0[Xx])(\\p{AHex}(?:\\p{AHex}|((?<=\\p{AHex})_(?=\\p{AHex})))*)((?:(?:(?:(?:(?:[Uu]|[Uu]l)|[Uu]L)|l[Uu]?)|L[Uu]?)|[DFMdfm])(?![\\p{L}\\p{M}\\p{N}\\p{Pc}]))?(?=\\n?$)/dgvy},{captures:{\"2\":{name:\"constant.numeric.decimal.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"3\":{name:\"constant.numeric.other.separator.thousands.cs\"},\"5\":{name:\"constant.numeric.other.exponent.cs\"},\"6\":{name:\"keyword.operator.arithmetic.cs\"},\"7\":{name:\"keyword.operator.arithmetic.cs\"},\"8\":{name:\"constant.numeric.decimal.cs\",patterns:[{match:/(?<=\\p{AHex})_(?=\\p{AHex})/dgv,name:\"constant.numeric.other.separator.thousands.cs\"}]},\"9\":{name:\"constant.numeric.other.suffix.cs\"}},match:/((?=[\\.0-9])(?!0[BXbx]))([0-9](?:[0-9]|((?<=\\p{AHex})_(?=\\p{AHex})))*)((?<!_)([Ee])(\\+?)(-?)([0-9](?:[0-9]|(?<=\\p{AHex})_(?=\\p{AHex}))*))?((?:(?:(?:(?:(?:[Uu]|[Uu]l)|[Uu]L)|l[Uu]?)|L[Uu]?)|[DFMdfm])(?![\\p{L}\\p{M}\\p{N}\\p{Pc}]))?(?=\\n?$)/dgvy},{match:/(?:[0-9A-Z_a-z]|(?<=[Ee])[\\-\\+]|\\.\\p{Nd})+/dgv,name:\"invalid.illegal.constant.numeric.cs\"}]}]}},match:/(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}])\\.?\\p{Nd}(?:[0-9A-Z_a-z]|(?<=[Ee])[\\-\\+]|\\.\\p{Nd})*/dgv},\"object-creation-expression\":{patterns:[{include:\"#object-creation-expression-with-parameters\"},{include:\"#object-creation-expression-with-no-parameters\"}]},\"object-creation-expression-with-no-parameters\":{captures:{\"1\":{name:\"keyword.operator.expression.new.cs\"},\"2\":{patterns:[{include:\"#type\"}]}},match:/*@__PURE__*/ new EmulatedRegExp(\"(new)\\\\p{space}+(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*(?=\\\\{|//|/\\\\*|(?=\\\\n?$))\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9],\"transfers\":[[3,[5,8]],[4,[7]],[6,[9]]]})},\"object-creation-expression-with-parameters\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(new)(?:\\\\p{space}+(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*))?\\\\p{space}*(?=\\\\()\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9],\"transfers\":[[3,[5,8]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{name:\"keyword.operator.expression.new.cs\"},\"2\":{patterns:[{include:\"#type\"}]}},end:/(?<=\\))/dgv,patterns:[{include:\"#argument-list\"}]},\"operator-assignment\":{match:/(?<![\\!\\=])(=)(?!=)/dgv,name:\"keyword.operator.assignment.cs\"},\"operator-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*\\\\b(?<operator_keyword>operator)\\\\b\\\\p{space}*(?<operator>[\\\\-\\\\!\\\\%\\\\&\\\\*\\\\+\\\\/\\\\<\\\\=\\\\>\\\\^\\\\|\\\\~]+|true|false)\\\\p{space}*(?=\\\\()\",\"dgv\",{\"hiddenCaptures\":[4,6,7,8],\"transfers\":[[2,[4,7]],[3,[6]],[5,[8]]]}),beginCaptures:{\"1\":{patterns:[{include:\"#type\"}]},\"6\":{name:\"storage.type.operator.cs\"},\"7\":{name:\"entity.name.function.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#parenthesized-parameter-list\"},{include:\"#expression-body\"},{include:\"#block\"}]},\"orderby-clause\":{begin:/\\b(orderby)\\b\\p{space}*/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.orderby.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#ordering-direction\"},{include:\"#query-body\"},{include:\"#expression\"},{include:\"#punctuation-comma\"}]},\"ordering-direction\":{captures:{\"1\":{name:\"keyword.operator.expression.query.$1.cs\"}},match:/\\b((?:a|de)scending)\\b/dgv},parameter:{captures:{\"1\":{name:\"storage.modifier.$1.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.parameter.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?:\\\\b(ref|params|out|in|this)\\\\b\\\\p{space}+)?(?<type_name>(?:ref\\\\p{space}+)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]})},\"parenthesized-expression\":{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#expression\"}]},\"parenthesized-parameter-list\":{begin:/(\\()/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/(\\))/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#attribute-section\"},{include:\"#parameter\"},{include:\"#punctuation-comma\"},{include:\"#variable-initializer\"}]},pattern:{patterns:[{include:\"#intrusive\"},{include:\"#combinator-pattern\"},{include:\"#discard-pattern\"},{include:\"#constant-pattern\"},{include:\"#relational-pattern\"},{include:\"#var-pattern\"},{include:\"#type-pattern\"},{include:\"#positional-pattern\"},{include:\"#property-pattern\"},{include:\"#list-pattern\"},{include:\"#slice-pattern\"}]},\"positional-pattern\":{begin:/(?=\\()/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#subpattern\"},{include:\"#punctuation-comma\"}]},{begin:/(?<=\\))/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#intrusive\"},{include:\"#property-pattern\"},{include:\"#simple-designation-pattern\"}]}]},preprocessor:{begin:/^\\p{space}*(#)\\p{space}*/dgv,beginCaptures:{\"1\":{name:\"punctuation.separator.hash.cs\"}},end:/(?<=(?=\\n?$))/dgv,name:\"meta.preprocessor.cs\",patterns:[{include:\"#comment\"},{include:\"#preprocessor-define-or-undef\"},{include:\"#preprocessor-if-or-elif\"},{include:\"#preprocessor-else-or-endif\"},{include:\"#preprocessor-warning-or-error\"},{include:\"#preprocessor-region\"},{include:\"#preprocessor-endregion\"},{include:\"#preprocessor-load\"},{include:\"#preprocessor-r\"},{include:\"#preprocessor-line\"},{include:\"#preprocessor-pragma-warning\"},{include:\"#preprocessor-pragma-checksum\"}]},\"preprocessor-define-or-undef\":{captures:{\"1\":{name:\"keyword.preprocessor.define.cs\"},\"2\":{name:\"keyword.preprocessor.undef.cs\"},\"3\":{name:\"entity.name.variable.preprocessor.symbol.cs\"}},match:/\\b(?:(define)|(undef))\\b\\p{space}*\\b([_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b/dgv},\"preprocessor-else-or-endif\":{captures:{\"1\":{name:\"keyword.preprocessor.else.cs\"},\"2\":{name:\"keyword.preprocessor.endif.cs\"}},match:/\\b(?:(else)|(endif))\\b/dgv},\"preprocessor-endregion\":{captures:{\"1\":{name:\"keyword.preprocessor.endregion.cs\"}},match:/\\b(endregion)\\b/dgv},\"preprocessor-expression\":{patterns:[{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#preprocessor-expression\"}]},{captures:{\"1\":{name:\"constant.language.boolean.true.cs\"},\"2\":{name:\"constant.language.boolean.false.cs\"},\"3\":{name:\"entity.name.variable.preprocessor.symbol.cs\"}},match:/\\b(?:(true)|(false)|([_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*))\\b/dgv},{captures:{\"1\":{name:\"keyword.operator.comparison.cs\"},\"2\":{name:\"keyword.operator.logical.cs\"}},match:/([\\!\\=]=)|(!|&&|\\|\\|)/dgv}]},\"preprocessor-if-or-elif\":{begin:/\\b(?:(if)|(elif))\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.preprocessor.if.cs\"},\"2\":{name:\"keyword.preprocessor.elif.cs\"}},end:/(?=(?=\\n?$))/dgv,patterns:[{include:\"#comment\"},{include:\"#preprocessor-expression\"}]},\"preprocessor-line\":{begin:/\\b(line)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.preprocessor.line.cs\"}},end:/(?=(?=\\n?$))/dgv,patterns:[{captures:{\"1\":{name:\"keyword.preprocessor.default.cs\"},\"2\":{name:\"keyword.preprocessor.hidden.cs\"}},match:/\\b(default|hidden)/dgv},{captures:{\"0\":{name:\"constant.numeric.decimal.cs\"}},match:/[0-9]+/dgv},{captures:{\"0\":{name:\"string.quoted.double.cs\"}},match:/\"[^\"]*\"/dgv}]},\"preprocessor-load\":{begin:/\\b(load)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.preprocessor.load.cs\"}},end:/(?=(?=\\n?$))/dgv,patterns:[{captures:{\"0\":{name:\"string.quoted.double.cs\"}},match:/\"[^\"]*\"/dgv}]},\"preprocessor-pragma-checksum\":{captures:{\"1\":{name:\"keyword.preprocessor.pragma.cs\"},\"2\":{name:\"keyword.preprocessor.checksum.cs\"},\"3\":{name:\"string.quoted.double.cs\"},\"4\":{name:\"string.quoted.double.cs\"},\"5\":{name:\"string.quoted.double.cs\"}},match:/\\b(pragma)\\b\\p{space}*\\b(checksum)\\b\\p{space}*(\"[^\"]*\")\\p{space}*(\"[^\"]*\")\\p{space}*(\"[^\"]*\")/dgv},\"preprocessor-pragma-warning\":{captures:{\"1\":{name:\"keyword.preprocessor.pragma.cs\"},\"2\":{name:\"keyword.preprocessor.warning.cs\"},\"3\":{name:\"keyword.preprocessor.disable.cs\"},\"4\":{name:\"keyword.preprocessor.restore.cs\"},\"5\":{patterns:[{captures:{\"0\":{name:\"constant.numeric.decimal.cs\"}},match:/[0-9]+/dgv},{include:\"#punctuation-comma\"}]}},match:/\\b(pragma)\\b\\p{space}*\\b(warning)\\b\\p{space}*\\b(?:(disable)|(restore))\\b(\\p{space}*[0-9]+(?:\\p{space}*,\\p{space}*[0-9]+)?)?/dgv},\"preprocessor-r\":{begin:/\\b(r)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.preprocessor.r.cs\"}},end:/(?=(?=\\n?$))/dgv,patterns:[{captures:{\"0\":{name:\"string.quoted.double.cs\"}},match:/\"[^\"]*\"/dgv}]},\"preprocessor-region\":{captures:{\"1\":{name:\"keyword.preprocessor.region.cs\"},\"2\":{name:\"string.unquoted.preprocessor.message.cs\"}},match:/\\b(region)\\b\\p{space}*([^\\n]*)(?=(?=\\n?$))/dgv},\"preprocessor-warning-or-error\":{captures:{\"1\":{name:\"keyword.preprocessor.warning.cs\"},\"2\":{name:\"keyword.preprocessor.error.cs\"},\"3\":{name:\"string.unquoted.preprocessor.message.cs\"}},match:/\\b(?:(warning)|(error))\\b\\p{space}*([^\\n]*)(?=(?=\\n?$))/dgv},\"property-accessors\":{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#attribute-section\"},{match:/\\b(private|protected|internal)\\b/dgv,name:\"storage.modifier.$1.cs\"},{begin:/\\b(get)\\b\\p{space}*(?=[\\;\\{]|=>|\\/\\/|\\/\\*|(?=\\n?$))/dgv,beginCaptures:{\"1\":{name:\"storage.type.accessor.$1.cs\"}},end:/(?<=[\\;\\}])|(?=\\})/dgv,patterns:[{include:\"#accessor-getter\"}]},{begin:/\\b(set|init)\\b\\p{space}*(?=[\\;\\{]|=>|\\/\\/|\\/\\*|(?=\\n?$))/dgv,beginCaptures:{\"1\":{name:\"storage.type.accessor.$1.cs\"}},end:/(?<=[\\;\\}])|(?=\\})/dgv,patterns:[{include:\"#accessor-setter\"}]}]},\"property-declaration\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"(?![\\\\p{Alpha}\\\\p{M}\\\\p{Nd}\\\\p{Pc}\\\\p{space}]*\\\\b(?:class|interface|struct|enum|event)\\\\b)(?<return_type>(?<type_name>(?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}+)(?<interface_name>((?:ref\\\\p{space}+(?:readonly\\\\p{space}+)?)?(?:(?:(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)\\\\p{space}*\\\\.\\\\p{space}*)?(?<property_name>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\p{space}*(?=\\\\{|=>|//|/\\\\*|(?=\\\\n?$))\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12,13,14,15,16,17,18,19,20,22],\"transfers\":[[3,[5,8,13,15,18,22]],[4,[7,14,17]],[6,[9,16,19]],[2,[12]],[10,[20]]]}),beginCaptures:{\"1\":{patterns:[{include:\"#type\"}]},\"7\":{patterns:[{include:\"#type\"},{include:\"#punctuation-accessor\"}]},\"8\":{name:\"entity.name.variable.property.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#property-accessors\"},{include:\"#accessor-getter-expression\"},{include:\"#variable-initializer\"},{include:\"#class-or-struct-members\"}]},\"property-pattern\":{begin:/(?=\\{)/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#subpattern\"},{include:\"#punctuation-comma\"}]},{begin:/(?<=\\})/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#intrusive\"},{include:\"#simple-designation-pattern\"}]}]},\"punctuation-accessor\":{match:/\\./dgv,name:\"punctuation.accessor.cs\"},\"punctuation-comma\":{match:/,/dgv,name:\"punctuation.separator.comma.cs\"},\"punctuation-semicolon\":{match:/;/dgv,name:\"punctuation.terminator.statement.cs\"},\"query-body\":{patterns:[{include:\"#let-clause\"},{include:\"#where-clause\"},{include:\"#join-clause\"},{include:\"#orderby-clause\"},{include:\"#select-clause\"},{include:\"#group-clause\"}]},\"query-expression\":{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(from)\\\\b\\\\p{space}*(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)?\\\\p{space}+((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b\\\\p{space}*\\\\b(in)\\\\b\\\\p{space}*\",\"dgv\",{\"hiddenCaptures\":[5,7,8,9,12],\"transfers\":[[3,[5,8,12]],[4,[7]],[6,[9]]]}),beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.from.cs\"},\"2\":{patterns:[{include:\"#type\"}]},\"7\":{name:\"entity.name.variable.range-variable.cs\"},\"8\":{name:\"keyword.operator.expression.query.in.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#query-body\"},{include:\"#expression\"}]},\"raw-interpolated-string\":{patterns:[{include:\"#raw-interpolated-string-five-or-more-quote-one-or-more-interpolation\"},{include:\"#raw-interpolated-string-three-or-more-quote-three-or-more-interpolation\"},{include:\"#raw-interpolated-string-quadruple-quote-double-interpolation\"},{include:\"#raw-interpolated-string-quadruple-quote-single-interpolation\"},{include:\"#raw-interpolated-string-triple-quote-double-interpolation\"},{include:\"#raw-interpolated-string-triple-quote-single-interpolation\"}]},\"raw-interpolated-string-five-or-more-quote-one-or-more-interpolation\":{begin:/\\$+\"\"\"\"\"+/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"\"\"+/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\"},\"raw-interpolated-string-quadruple-quote-double-interpolation\":{begin:/\\$\\$\"\"\"\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#double-raw-interpolation\"}]},\"raw-interpolated-string-quadruple-quote-single-interpolation\":{begin:/\\$\"\"\"\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#raw-interpolation\"}]},\"raw-interpolated-string-three-or-more-quote-three-or-more-interpolation\":{begin:/\\$\\$\\$+\"\"\"+/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"+/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\"},\"raw-interpolated-string-triple-quote-double-interpolation\":{begin:/\\$\\$\"\"\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#double-raw-interpolation\"}]},\"raw-interpolated-string-triple-quote-single-interpolation\":{begin:/\\$\"\"\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#raw-interpolation\"}]},\"raw-interpolation\":{begin:/(?<=[^\\{]|^)(\\{*)(\\{)(?=[^\\{])/dgv,beginCaptures:{\"1\":{name:\"string.quoted.double.cs\"},\"2\":{name:\"punctuation.definition.interpolation.begin.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.interpolation.end.cs\"}},name:\"meta.interpolation.cs\",patterns:[{include:\"#expression\"}]},\"raw-string-literal\":{patterns:[{include:\"#raw-string-literal-more\"},{include:\"#raw-string-literal-quadruple\"},{include:\"#raw-string-literal-triple\"}]},\"raw-string-literal-more\":{begin:/\"\"\"\"\"+/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"\"\"+/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\"},\"raw-string-literal-quadruple\":{begin:/\"\"\"\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\"},\"raw-string-literal-triple\":{begin:/\"\"\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"\"\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\"},\"readonly-modifier\":{match:/\\breadonly\\b/dgv,name:\"storage.modifier.readonly.cs\"},\"record-declaration\":{begin:/(?=\\brecord\\b)/dgv,end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/(record)\\b\\p{space}+(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv,beginCaptures:{\"1\":{name:\"storage.type.record.cs\"},\"2\":{name:\"entity.name.type.class.cs\"}},end:/(?=\\{)|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#type-parameter-list\"},{include:\"#parenthesized-parameter-list\"},{include:\"#base-types\"},{include:\"#generic-constraints\"}]},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#class-or-struct-members\"}]},{include:\"#preprocessor\"},{include:\"#comment\"}]},\"ref-modifier\":{match:/\\bref\\b/dgv,name:\"storage.modifier.ref.cs\"},\"relational-pattern\":{begin:/<=?|>=?/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.relational.cs\"}},end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#expression\"}]},\"return-statement\":{begin:/(?<!\\.)\\b(return)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.flow.return.cs\"}},end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#ref-modifier\"},{include:\"#expression\"}]},\"script-top-level\":{patterns:[{include:\"#statement\"},{include:\"#method-declaration\"},{include:\"#punctuation-semicolon\"}]},\"select-clause\":{begin:/\\b(select)\\b\\p{space}*/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.select.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#query-body\"},{include:\"#expression\"}]},\"simple-designation-pattern\":{patterns:[{include:\"#discard-pattern\"},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.variable.local.cs\"}]},\"slice-pattern\":{match:/\\.\\./dgv,name:\"keyword.operator.range.cs\"},statement:{patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#while-statement\"},{include:\"#do-statement\"},{include:\"#for-statement\"},{include:\"#foreach-statement\"},{include:\"#if-statement\"},{include:\"#else-part\"},{include:\"#goto-statement\"},{include:\"#return-statement\"},{include:\"#break-or-continue-statement\"},{include:\"#throw-statement\"},{include:\"#yield-statement\"},{include:\"#await-statement\"},{include:\"#try-statement\"},{include:\"#expression-operator-expression\"},{include:\"#context-control-statement\"},{include:\"#context-control-paren-statement\"},{include:\"#labeled-statement\"},{include:\"#object-creation-expression\"},{include:\"#array-creation-expression\"},{include:\"#anonymous-object-creation-expression\"},{include:\"#local-declaration\"},{include:\"#block\"},{include:\"#expression\"},{include:\"#punctuation-semicolon\"}]},\"storage-modifier\":{match:/(?<!\\.)\\b(new|public|protected|internal|private|abstract|virtual|override|sealed|static|partial|readonly|volatile|const|extern|async|unsafe|ref|required|file)\\b/dgv,name:\"storage.modifier.$1.cs\"},\"string-character-escape\":{match:/\\\\(x\\p{AHex}{1,4}|U\\p{AHex}{8}|u\\p{AHex}{4}|[^\\n])/dgv,name:\"constant.character.escape.cs\"},\"string-literal\":{begin:/(?<!@)\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/(\")|([^\\n\\\\])(?=\\n?$)/dgv,endCaptures:{\"1\":{name:\"punctuation.definition.string.end.cs\"},\"2\":{name:\"invalid.illegal.newline.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#string-character-escape\"}]},\"struct-declaration\":{begin:/(?=(\\brecord\\b\\p{space}+)?\\bstruct\\b)/dgv,end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/(\\b(record)\\b\\p{space}+)?(struct)\\b\\p{space}+(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv,beginCaptures:{\"2\":{name:\"storage.type.record.cs\"},\"3\":{name:\"storage.type.struct.cs\"},\"4\":{name:\"entity.name.type.struct.cs\"}},end:/(?=\\{)|(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#type-parameter-list\"},{include:\"#parenthesized-parameter-list\"},{include:\"#base-types\"},{include:\"#generic-constraints\"}]},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#class-or-struct-members\"}]},{include:\"#preprocessor\"},{include:\"#comment\"}]},subpattern:{patterns:[{captures:{\"1\":{patterns:[{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"variable.other.object.property.cs\"},{include:\"#punctuation-accessor\"}]},\"2\":{name:\"punctuation.separator.colon.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*(?:\\p{space}*\\.\\p{space}*@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)*)\\p{space}*(:)/dgv},{include:\"#pattern\"}]},\"switch-expression\":{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#punctuation-comma\"},{begin:/=>/dgv,beginCaptures:{\"0\":{name:\"keyword.operator.arrow.cs\"}},end:/(?=[\\,\\}])/dgv,patterns:[{include:\"#expression\"}]},{begin:/\\b(when)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.when.cs\"}},end:/(?==>|[\\,\\}])/dgv,patterns:[{include:\"#case-guard\"}]},{begin:/(?!\\p{space})/dgv,end:/(?=\\bwhen\\b|=>|[\\,\\}])/dgv,patterns:[{include:\"#pattern\"}]}]},\"switch-label\":{begin:/\\b(case|default)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.$1.cs\"}},end:/(:)|(?=\\})/dgv,endCaptures:{\"1\":{name:\"punctuation.separator.colon.cs\"}},patterns:[{begin:/\\b(when)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.when.cs\"}},end:/(?=[\\:\\}])/dgv,patterns:[{include:\"#case-guard\"}]},{begin:/(?!\\p{space})/dgv,end:/(?=\\bwhen\\b|[\\:\\}])/dgv,patterns:[{include:\"#pattern\"}]}]},\"switch-statement\":{patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#expression\"}]},{begin:/\\{/dgv,beginCaptures:{\"0\":{name:\"punctuation.curlybrace.open.cs\"}},end:/\\}/dgv,endCaptures:{\"0\":{name:\"punctuation.curlybrace.close.cs\"}},patterns:[{include:\"#switch-label\"},{include:\"#statement\"}]}]},\"switch-statement-or-expression\":{begin:/(?<!\\.)\\b(switch)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.conditional.switch.cs\"}},end:/(?<=\\})|(?=\\})/dgv,patterns:[{include:\"#intrusive\"},{begin:/(?=\\()/dgv,end:/(?<=\\})|(?=\\})/dgv,patterns:[{include:\"#switch-statement\"}]},{begin:/(?=\\{)/dgv,end:/(?<=\\})|(?=\\})/dgv,patterns:[{include:\"#switch-expression\"}]}]},\"throw-expression\":{captures:{\"1\":{name:\"keyword.control.flow.throw.cs\"}},match:/\\b(throw)\\b/dgv},\"throw-statement\":{begin:/(?<!\\.)\\b(throw)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.flow.throw.cs\"}},end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#expression\"}]},\"try-block\":{begin:/(?<!\\.)\\b(try)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.exception.try.cs\"}},end:/(?<=\\})/dgv,patterns:[{include:\"#comment\"},{include:\"#block\"}]},\"try-statement\":{patterns:[{include:\"#try-block\"},{include:\"#catch-clause\"},{include:\"#finally-clause\"}]},\"tuple-declaration-deconstruction-element-list\":{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#tuple-declaration-deconstruction-element-list\"},{include:\"#declaration-expression-tuple\"},{include:\"#punctuation-comma\"},{captures:{\"1\":{name:\"entity.name.variable.tuple-element.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b\\p{space}*(?=[\\)\\,])/dgv}]},\"tuple-deconstruction-assignment\":{captures:{\"1\":{patterns:[{include:\"#tuple-deconstruction-element-list\"}]}},match:/(?<tuple>\\p{space}*\\((?:[^\\(\\)]|(?:\\p{space}*\\((?:[^\\(\\)]|(?:\\p{space}*\\((?:[^\\(\\)]|(?:\\p{space}*\\((?:[^\\(\\)]|(?:\\p{space}*\\((?:[^\\(\\)]|(?:))+\\)))+\\)))+\\)))+\\)))+\\))\\p{space}*(?!=[\\=\\>])(?==)/dgv},\"tuple-deconstruction-element-list\":{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#tuple-deconstruction-element-list\"},{include:\"#declaration-expression-tuple\"},{include:\"#punctuation-comma\"},{captures:{\"1\":{name:\"variable.other.readwrite.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b\\p{space}*(?=[\\)\\,])/dgv}]},\"tuple-element\":{captures:{\"1\":{patterns:[{include:\"#type\"}]},\"6\":{name:\"entity.name.variable.tuple-element.cs\"}},match:/*@__PURE__*/ new EmulatedRegExp(\"(?<type_name>(?:(?:(?<identifier>@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*::\\\\p{space}*)?(?<name_and_type_args>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(?<type_args>\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?)(?:\\\\p{space}*\\\\.\\\\p{space}*((@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*)\\\\p{space}*(\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:\\\\p{space}*<(?:[^\\\\<\\\\>]|(?:))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*))+>\\\\p{space}*)?))*|(?<tuple>\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:\\\\p{space}*\\\\((?:[^\\\\(\\\\)]|(?:))+\\\\)))+\\\\)))+\\\\)))+\\\\)))+\\\\)))(?:\\\\p{space}*\\\\?\\\\p{space}*)?(?:\\\\p{space}*\\\\[(?:\\\\p{space}*,\\\\p{space}*)*\\\\]\\\\p{space}*\\\\??\\\\p{space}*)*)(?:(?<tuple_name>(@?[_\\\\p{Alpha}][_\\\\p{Alpha}\\\\p{Nd}]*))\\\\b)?\",\"dgv\",{\"hiddenCaptures\":[4,6,7,8,11],\"transfers\":[[2,[4,7,11]],[3,[6]],[5,[8]]]})},\"tuple-literal\":{begin:/(\\()(?=[^\\n]*[\\,\\:])/dgv,beginCaptures:{\"1\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#comment\"},{include:\"#tuple-literal-element\"},{include:\"#expression\"},{include:\"#punctuation-comma\"}]},\"tuple-literal-element\":{begin:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(?=:)/dgv,beginCaptures:{\"1\":{name:\"entity.name.variable.tuple-element.cs\"}},end:/(:)/dgv,endCaptures:{\"0\":{name:\"punctuation.separator.colon.cs\"}}},\"tuple-type\":{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#tuple-element\"},{include:\"#punctuation-comma\"}]},type:{patterns:[{include:\"#comment\"},{include:\"#ref-modifier\"},{include:\"#readonly-modifier\"},{include:\"#tuple-type\"},{include:\"#type-builtin\"},{include:\"#type-name\"},{include:\"#type-arguments\"},{include:\"#type-array-suffix\"},{include:\"#type-nullable-suffix\"},{include:\"#type-pointer-suffix\"}]},\"type-arguments\":{begin:/</dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.typeparameters.begin.cs\"}},end:/>/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.typeparameters.end.cs\"}},patterns:[{include:\"#type\"},{include:\"#punctuation-comma\"}]},\"type-array-suffix\":{begin:/\\[/dgv,beginCaptures:{\"0\":{name:\"punctuation.squarebracket.open.cs\"}},end:/\\]/dgv,endCaptures:{\"0\":{name:\"punctuation.squarebracket.close.cs\"}},patterns:[{include:\"#intrusive\"},{include:\"#punctuation-comma\"}]},\"type-builtin\":{captures:{\"1\":{name:\"keyword.type.$1.cs\"}},match:/\\b(bool|s?byte|u?short|n?u?int|u?long|float|double|decimal|char|string|object|void|dynamic)\\b/dgv},\"type-declarations\":{patterns:[{include:\"#preprocessor\"},{include:\"#comment\"},{include:\"#storage-modifier\"},{include:\"#class-declaration\"},{include:\"#delegate-declaration\"},{include:\"#enum-declaration\"},{include:\"#interface-declaration\"},{include:\"#struct-declaration\"},{include:\"#record-declaration\"},{include:\"#attribute-section\"},{include:\"#punctuation-semicolon\"}]},\"type-name\":{patterns:[{captures:{\"1\":{name:\"entity.name.type.alias.cs\"},\"2\":{name:\"punctuation.separator.coloncolon.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(::)/dgv},{captures:{\"1\":{name:\"entity.name.type.cs\"},\"2\":{name:\"punctuation.accessor.cs\"}},match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(\\.)/dgv},{captures:{\"1\":{name:\"punctuation.accessor.cs\"},\"2\":{name:\"entity.name.type.cs\"}},match:/(\\.)\\p{space}*(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.type.cs\"}]},\"type-nullable-suffix\":{match:/\\?/dgv,name:\"punctuation.separator.question-mark.cs\"},\"type-operator-expression\":{begin:/\\b(default|sizeof|typeof)\\p{space}*(\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.$1.cs\"},\"2\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#type\"}]},\"type-parameter-list\":{begin:/</dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.typeparameters.begin.cs\"}},end:/>/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.typeparameters.end.cs\"}},patterns:[{match:/\\b(in|out)\\b/dgv,name:\"storage.modifier.$1.cs\"},{match:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\b/dgv,name:\"entity.name.type.type-parameter.cs\"},{include:\"#comment\"},{include:\"#punctuation-comma\"},{include:\"#attribute-section\"}]},\"type-pattern\":{begin:/(?=@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{begin:/(?:)/dgv,end:/*@__PURE__*/ new EmulatedRegExp(\"(?!^[\\\\@_\\\\p{Alpha}])(?=[\\\\]\\\\&\\\\(\\\\)\\\\,\\\\:\\\\;\\\\=\\\\@\\\\^_\\\\{\\\\|\\\\}\\\\p{Alpha}]|(?:\\\\p{space}|^)\\\\?|!=|\\\\b(and|or|when)\\\\b)\",\"dgv\",{\"strategy\":\"clip_search\"}),patterns:[{include:\"#intrusive\"},{include:\"#type-subpattern\"}]},{begin:/(?=[\\(\\@_\\{\\p{Alpha}])/dgv,end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#intrusive\"},{include:\"#positional-pattern\"},{include:\"#property-pattern\"},{include:\"#simple-designation-pattern\"}]}]},\"type-pointer-suffix\":{match:/\\*/dgv,name:\"punctuation.separator.asterisk.cs\"},\"type-subpattern\":{patterns:[{include:\"#type-builtin\"},{begin:/(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(::)/dgv,beginCaptures:{\"1\":{name:\"entity.name.type.alias.cs\"},\"2\":{name:\"punctuation.separator.coloncolon.cs\"}},end:/(?<=[_\\p{Alpha}\\p{Nd}])|(?=[\\]\\&\\(\\)\\,\\.\\:-\\=\\?\\[\\^\\{\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#intrusive\"},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.type.cs\"}]},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.type.cs\"},{begin:/\\./dgv,beginCaptures:{\"0\":{name:\"punctuation.accessor.cs\"}},end:/(?<=[_\\p{Alpha}\\p{Nd}])|(?=[\\]\\&\\(\\)\\,\\:-\\=\\?\\[\\^\\{\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#intrusive\"},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.type.cs\"}]},{include:\"#type-arguments\"},{include:\"#type-array-suffix\"},{match:/(?<!\\p{space})\\?/dgv,name:\"punctuation.separator.question-mark.cs\"}]},\"using-directive\":{patterns:[{begin:/\\b(?:(global)\\p{space}+)?(using)\\p{space}+(static)\\b\\p{space}*(?:(unsafe)\\b\\p{space}*)?/dgv,beginCaptures:{\"1\":{name:\"keyword.other.directive.global.cs\"},\"2\":{name:\"keyword.other.directive.using.cs\"},\"3\":{name:\"keyword.other.directive.static.cs\"},\"4\":{name:\"storage.modifier.unsafe.cs\"}},end:/(?=;)/dgv,patterns:[{include:\"#type\"}]},{begin:/\\b(?:(global)\\p{space}+)?(using)\\b\\p{space}*(?:(unsafe)\\b\\p{space}*)?(@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*)\\p{space}*(=)/dgv,beginCaptures:{\"1\":{name:\"keyword.other.directive.global.cs\"},\"2\":{name:\"keyword.other.directive.using.cs\"},\"3\":{name:\"storage.modifier.unsafe.cs\"},\"4\":{name:\"entity.name.type.alias.cs\"},\"5\":{name:\"keyword.operator.assignment.cs\"}},end:/(?=;)/dgv,patterns:[{include:\"#comment\"},{include:\"#type\"}]},{begin:/*@__PURE__*/ new EmulatedRegExp(\"\\\\b(?:(global)\\\\p{space}+)?(using)\\\\b(?:(?=(\\\\p{space}*))\\\\3)(?!\\\\(|var\\\\b)\",\"dgv\",{\"hiddenCaptures\":[3]}),beginCaptures:{\"1\":{name:\"keyword.other.directive.global.cs\"},\"2\":{name:\"keyword.other.directive.using.cs\"}},end:/(?=;)/dgv,patterns:[{include:\"#comment\"},{match:/@?[_\\p{Alpha}][_\\p{Alpha}\\p{Nd}]*/dgv,name:\"entity.name.type.namespace.cs\"},{include:\"#punctuation-accessor\"},{include:\"#operator-assignment\"}]}]},\"using-statement\":{begin:/\\b(using)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.context.using.cs\"}},end:/(?<=\\))|(?=[\\;\\}])/dgv,patterns:[{include:\"#intrusive\"},{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#intrusive\"},{include:\"#await-expression\"},{include:\"#local-variable-declaration\"},{include:\"#expression\"}]},{include:\"#local-variable-declaration\"}]},\"var-pattern\":{begin:/\\b(var)\\b/dgv,beginCaptures:{\"1\":{name:\"storage.type.var.cs\"}},end:/(?=[\\]\\&\\)\\,\\:\\;\\=\\?\\^\\|\\}]|!=|\\b(and|or|when)\\b)/dgv,patterns:[{include:\"#designation-pattern\"}]},\"variable-initializer\":{begin:/(?<![\\!\\=])(=)(?![\\=\\>])/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.assignment.cs\"}},end:/(?=[\\]\\)\\,\\;\\}])/dgv,patterns:[{include:\"#ref-modifier\"},{include:\"#expression\"}]},\"verbatim-interpolated-string\":{begin:/(?:\\$@|@\\$)\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"(?=[^\"])/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#verbatim-string-character-escape\"},{include:\"#interpolation\"}]},\"verbatim-string-character-escape\":{match:/\"\"/dgv,name:\"constant.character.escape.cs\"},\"verbatim-string-literal\":{begin:/@\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"(?=[^\"])/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#verbatim-string-character-escape\"}]},\"when-clause\":{begin:/(?<!\\.)\\b(when)\\b\\p{space}*(\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.control.exception.when.cs\"},\"2\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#expression\"},{include:\"#comment\"}]},\"where-clause\":{begin:/\\b(where)\\b\\p{space}*/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.query.where.cs\"}},end:/(?=[\\)\\;])/dgv,patterns:[{include:\"#query-body\"},{include:\"#expression\"}]},\"while-statement\":{begin:/(?<!\\.)\\b(while)\\b\\p{space}*(?=\\()/dgv,beginCaptures:{\"1\":{name:\"keyword.control.loop.while.cs\"}},end:/(?<=\\})|(?=;)/dgv,patterns:[{begin:/\\(/dgv,beginCaptures:{\"0\":{name:\"punctuation.parenthesis.open.cs\"}},end:/\\)/dgv,endCaptures:{\"0\":{name:\"punctuation.parenthesis.close.cs\"}},patterns:[{include:\"#expression\"}]},{include:\"#statement\"}]},\"with-expression\":{begin:/(?<!\\.)\\b(with)\\b\\p{space}*(?=\\{|\\/\\/|\\/\\*|(?=\\n?$))/dgv,beginCaptures:{\"1\":{name:\"keyword.operator.expression.with.cs\"}},end:/(?<=\\})/dgv,patterns:[{include:\"#comment\"},{include:\"#initializer-expression\"}]},\"xml-attribute\":{patterns:[{captures:{\"1\":{name:\"entity.other.attribute-name.cs\"},\"2\":{name:\"entity.other.attribute-name.namespace.cs\"},\"3\":{name:\"punctuation.separator.colon.cs\"},\"4\":{name:\"entity.other.attribute-name.localname.cs\"},\"5\":{name:\"punctuation.separator.equals.cs\"}},match:/(?:^|\\p{space}+)((?:([\\-_\\p{Alpha}\\p{Nd}]+)(:))?([\\-_\\p{Alpha}\\p{Nd}]+))(=)/dgv},{include:\"#xml-string\"}]},\"xml-cdata\":{begin:/<!\\[CDATA\\[/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\\]\\]>/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.unquoted.cdata.cs\"},\"xml-character-entity\":{patterns:[{captures:{\"1\":{name:\"punctuation.definition.constant.cs\"},\"3\":{name:\"punctuation.definition.constant.cs\"}},match:/(&)([\\:_\\p{Alpha}][\\-\\.\\:_\\p{Alpha}\\p{Nd}]*|#\\p{Nd}+|#x\\p{AHex}+)(;)/dgv,name:\"constant.character.entity.cs\"},{match:/&/dgv,name:\"invalid.illegal.bad-ampersand.cs\"}]},\"xml-comment\":{begin:/<!--/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.comment.cs\"}},end:/-->/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.comment.cs\"}},name:\"comment.block.cs\"},\"xml-doc-comment\":{patterns:[{include:\"#xml-comment\"},{include:\"#xml-character-entity\"},{include:\"#xml-cdata\"},{include:\"#xml-tag\"}]},\"xml-string\":{patterns:[{begin:/'/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/'/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.single.cs\",patterns:[{include:\"#xml-character-entity\"}]},{begin:/\"/dgv,beginCaptures:{\"0\":{name:\"punctuation.definition.string.begin.cs\"}},end:/\"/dgv,endCaptures:{\"0\":{name:\"punctuation.definition.string.end.cs\"}},name:\"string.quoted.double.cs\",patterns:[{include:\"#xml-character-entity\"}]}]},\"xml-tag\":{begin:/(<\\/?)((?:([\\-_\\p{Alpha}\\p{Nd}]+)(:))?([\\-_\\p{Alpha}\\p{Nd}]+))/dgv,beginCaptures:{\"1\":{name:\"punctuation.definition.tag.cs\"},\"2\":{name:\"entity.name.tag.cs\"},\"3\":{name:\"entity.name.tag.namespace.cs\"},\"4\":{name:\"punctuation.separator.colon.cs\"},\"5\":{name:\"entity.name.tag.localname.cs\"}},end:/(\\/?>)/dgv,endCaptures:{\"1\":{name:\"punctuation.definition.tag.cs\"}},name:\"meta.tag.cs\",patterns:[{include:\"#xml-attribute\"}]},\"yield-break-statement\":{captures:{\"1\":{name:\"keyword.control.flow.yield.cs\"},\"2\":{name:\"keyword.control.flow.break.cs\"}},match:/(?<!\\.)\\b(yield)\\b\\p{space}*\\b(break)\\b/dgv},\"yield-return-statement\":{begin:/(?<!\\.)\\b(yield)\\b\\p{space}*\\b(return)\\b/dgv,beginCaptures:{\"1\":{name:\"keyword.control.flow.yield.cs\"},\"2\":{name:\"keyword.control.flow.return.cs\"}},end:/(?=[\\;\\}])/dgv,patterns:[{include:\"#expression\"}]},\"yield-statement\":{patterns:[{include:\"#yield-return-statement\"},{include:\"#yield-break-statement\"}]}},scopeName:\"source.cs\",embeddedLangs:undefined,aliases:[\"c#\",\"cs\"]})\n\nexport default [\nlang\n]\n"],"names":["lang","EmulatedRegExp","csharp"],"mappings":"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","x_google_ignoreList":[0]}